[{"path":"https://alexpate30.github.io/calibmsm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 calibmsm authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://alexpate30.github.io/calibmsm/articles/BLR-IPCW-manual-bootstrap.html","id":"data-preperation","dir":"Articles","previous_headings":"","what":"Data preperation","title":"BLR-IPCW-manual-bootstrap","text":"vignette compares showcases manually apply bootstrap procedure estimate confidence interval BLR-IPCW calibration curves using custom function estimate inverse probability censoring weights. start reminding EBMT (Wreede, Fiocco, Putter 2011; EBMT 2023) validation datasets ebmtcal msebmtcal, predicted transition probabilities state j = 1 made time s = 0 multistate model (tps0). also set time want evaluate transition probabilities t. Please refer vignette(\"Overview\") detailed description data.","code":"set.seed(101)  library(calibmsm)  data(\"ebmtcal\") head(ebmtcal) #>   id  rec rec.s   ae ae.s recae recae.s  rel rel.s  srv srv.s      year agecl #> 1  1   22     1  995    0   995       0  995     0  995     0 1995-1998 20-40 #> 2  2   29     1   12    1    29       1  422     1  579     1 1995-1998 20-40 #> 3  3 1264     0   27    1  1264       0 1264     0 1264     0 1995-1998 20-40 #> 4  4   50     1   42    1    50       1   84     1  117     1 1995-1998 20-40 #> 5  5   22     1 1133    0  1133       0  114     1 1133     0 1995-1998   >40 #> 6  6   33     1   27    1    33       1 1427     0 1427     0 1995-1998 20-40 #>   proph              match dtcens dtcens.s #> 1    no no gender mismatch    995        1 #> 2    no no gender mismatch    422        0 #> 3    no no gender mismatch   1264        1 #> 4    no    gender mismatch     84        0 #> 5    no    gender mismatch    114        0 #> 6    no no gender mismatch   1427        1  data(\"msebmtcal\") head(msebmtcal) #>   id from to trans Tstart Tstop time status #> 1  1    1  2     1      0    22   22      1 #> 2  1    1  3     2      0    22   22      0 #> 3  1    1  5     3      0    22   22      0 #> 4  1    1  6     4      0    22   22      0 #> 5  1    2  4     5     22   995  973      0 #> 6  1    2  5     6     22   995  973      0  data(\"tps0\") head(tps0) #>   id   pstate1   pstate2    pstate3   pstate4   pstate5   pstate6        se1 #> 1  1 0.1139726 0.2295006 0.08450376 0.2326861 0.1504855 0.1888514 0.01291133 #> 2  2 0.1140189 0.2316569 0.08442692 0.2328398 0.1481977 0.1888598 0.01291552 #> 3  3 0.1136646 0.2317636 0.08274331 0.2325663 0.1504787 0.1887834 0.01289444 #> 4  4 0.1383878 0.1836189 0.07579429 0.2179331 0.1538475 0.2304185 0.01857439 #> 5  5 0.1233226 0.1609740 0.05508100 0.1828176 0.1425950 0.3352099 0.01944967 #> 6  6 0.1136646 0.2317636 0.08462424 0.2305854 0.1505534 0.1888087 0.01289444 #>          se2        se3        se4        se5        se6 j #> 1 0.02369584 0.01257251 0.02323376 0.01648630 0.01601795 1 #> 2 0.02374329 0.01256056 0.02324869 0.01632797 0.01603703 1 #> 3 0.02375770 0.01245752 0.02322375 0.01647890 0.01601525 1 #> 4 0.03004447 0.01462570 0.03018673 0.02124071 0.02416121 1 #> 5 0.03419721 0.01367768 0.03423941 0.02329644 0.03688586 1 #> 6 0.02375770 0.01257276 0.02317348 0.01649531 0.01602438 1  t <- 1826"},{"path":"https://alexpate30.github.io/calibmsm/articles/BLR-IPCW-manual-bootstrap.html","id":"confidence-intervals-for-blr-ipcw-using-internal-bootstrapping-procedure","dir":"Articles","previous_headings":"","what":"Confidence intervals for BLR-IPCW using internal bootstrapping procedure","title":"BLR-IPCW-manual-bootstrap","text":"now remind procedure generating confidence interval, estimate confidence interval BLR-IPCW calibration curve using internal bootstrapping procedure, done vignette(\"Overview\"). Resample validation dataset replacement Landmark dataset assessment calibration Calculate inverse probability censoring weights Fit preferred calibration model landmarked dataset (restricted cubic splines loess smoother) Generate observed event probabilities fixed vector predicted transition probabilities (specifically predicted transition probabilities non-bootstrapped landmark validation dataset) code produce confidence interval follows: Figure 2: Calibration plots using BLR-IPCW, confidence interval estimated using manual bootstrap procedure","code":"dat.calib.blr <-   calib_blr(data.mstate = msebmtcal,                  data.raw = ebmtcal,                  j=1,                  s=0,                  t = t,                  tp.pred = tps0 |>                   dplyr::filter(j == 1) |>                   dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))),                  curve.type = \"rcs\",                  rcs.nk = 3,                  w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),                  CI = 95,                  CI.R.boot = 200) plot(dat.calib.blr, combine = TRUE)"},{"path":"https://alexpate30.github.io/calibmsm/articles/BLR-IPCW-manual-bootstrap.html","id":"confidence-intervals-for-blr-ipcw-by-inputting-custom-weights-funciton-into-calib_blr","dir":"Articles","previous_headings":"","what":"Confidence intervals for BLR-IPCW by inputting custom weights funciton into calib_blr","title":"BLR-IPCW-manual-bootstrap","text":"approach accessible, may lead misspecified model weights given user control choice model (Cox model) functional form predictor variables \\(\\textbf{Z}\\), continuous variables assumed linear effects hazard, interaction terms. Potential issues using internal process estimating weights exemplified article(\"Evaluation--estimation--IPCWs\"). therefore encourage users explore data produce suitable model estimate weights. Please see vignette(\"Overview\") definition estimand weights estimate . function estimating weights defined, internal bootstrapping procedure can utilised function, specified w.function argument. function must contain parameters present calc_weights function, even plan use parameters. parameters specified arguments w. prefix calib_blr. Specification extra parameters calc_weights also allowed. parameters specified ... argument calc_clib_blr. showcase defining new function calc_weights_manual. example, specify calc_weights. practice, recommend , option allow user specify function estimating weights. Given choice function estimate weights, calibration curve Figure 1, confidence interval similar size. Figure 2: Calibration plots using BLR-IPCW, confidence interval estimated using internal bootstrap procedure custom specification function estimate weights","code":"calc_weights_manual <- calibmsm::calc_weights  dat.calib.blr.w.function <-   calib_blr(data.mstate = msebmtcal,                  data.raw = ebmtcal,                  j=1,                  s=0,                  t = t,                  tp.pred = tps0 |>                   dplyr::filter(j == 1) |>                   dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))),                  curve.type = \"rcs\",                  rcs.nk = 3,                  w.function = calc_weights_manual,                  w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),                  CI = 95,                  CI.R.boot = 200) plot(dat.calib.blr.w.function, combine = TRUE, nrow = 2, ncol = 3)"},{"path":"https://alexpate30.github.io/calibmsm/articles/BLR-IPCW-manual-bootstrap.html","id":"confidence-intervals-for-blr-ipcw-by-manually-running-bootstrapping-procedure-with-custom-function-for-estimating-the-weights","dir":"Articles","previous_headings":"","what":"Confidence intervals for BLR-IPCW by manually running bootstrapping procedure with custom function for estimating the weights","title":"BLR-IPCW-manual-bootstrap","text":"Finally, showcase run bootstrapping procedure manually. allows users parallelise code reduce computational time. done using package boot (Canty Ripley 2022) conjunction calib_blr. start creating permanent object predicted risks individual. validation cohort ebmtcal resampled, appropriate predicted transition probabilities must also resampled object. Next define predicted transition probabilities observed event probabilities plotted, must every bootstrapped calibration curve. predicted transition probabilities individuals uncensored time t, predicted transition probabilities original calibration curves. calibration curves (confidence interval) now calculated. utilise calc_weights function calibmsm estimate weights, function used internally. However, practice point exercise create better performing model estimate weights one internal procedure. vector weights entry every row validation dataset. individuals included landmark cohort, censored prior time \\(t\\), weights can take value included calibration model fitted. observed event probabilities can estimated using calib_blr call weights argument. now time estimate confidence interval curve. define function calc_obs_boot generate bootstrapped calibration curve compatible boot function boot (Canty Ripley 2022) package. Within bootstrapped dataset, weights calculated calibration curve estimated using calib_blr. use argument data.pred.plot calib_blr essential , ensure bootstrapped observed event probabilities generated vectors predicted transition probabilities. function also written estimate curve transition probabilities specific state \\(k\\), output boot must vector, rather matrix. done utilising transitions.argument calib_blr. size confidence interval, states \\(k\\) individuals may transition state \\(j\\), list store data plots defined: bootstrap procedure now applied validation dataset ebmtcal state \\(k\\) valid.transitions, upper lower confidence bands stored data.frame along calibration curve calculated earlier. Finally, metadata added appropriate class defined data format output calib_blr, meaning can used S3 generic plot. Note example assessed.transitions = valid.transitions, may case estimated calibration curves subset possible transitions. calibration curves manually estimated confidence intervals plotted Figure 3. Figure similar Figures 1 2. expected given used model estimate weights used internal procedure, verifies manual procedure calculating confidence interval successful. Figure 3: Calibration plots using BLR-IPCW, confidence interval estimated using manual bootstrap procedure","code":"tp.pred <- tps0 |>   dplyr::filter(j == 1) |>   dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) ## Extract ids for individuals uncensored at t ids.uncens <- ebmtcal |>   subset(dtcens > t | (dtcens < t & dtcens.s == 0)) |>   dplyr::pull(id) ## Extract the predicted risks out of state 1 for these individuals data.pred.plot <- tps0 |>   dplyr::filter(j == 1 & id %in% ids.uncens) |>   dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) weights.manual <-   calc_weights(data.mstate = msebmtcal,                data.raw = ebmtcal,                covs = c(\"year\", \"agecl\", \"proph\", \"match\"),                t = t,                s = 0,                landmark.type = \"state\",                j = 1,                max.weight = 10,                stabilised = FALSE)$ipcw str(weights.manual) #>  num [1:2279] NA 1.14 NA 1.01 1.03 ... dat.calib.boot.manual <-   calib_blr(data.mstate = msebmtcal,                  data.raw = ebmtcal,                  j = 1,                  s = 0,                  t = t,                  tp.pred = tp.pred,                  curve.type = \"rcs\",                  rcs.nk = 3,                  weights = weights.manual) calc_obs_boot <- function(data, indices, tp.pred, state.k){    ## Bootstrap dataset and predicted transition probabilities   data.boot <- data[indices,]   tp.pred.boot <- tp.pred[indices, ]    ## Calculate weights   ## In practice - replace this function with your own   weights.manual <-     calc_weights(data.mstate = msebmtcal,                  data.raw = data.boot,                  covs = c(\"year\", \"agecl\", \"proph\", \"match\"),                  t = t,                  s = 0,                  landmark.type = \"state\",                  j = 1,                  max.weight = 10,                  stabilised = FALSE)$ipcw    ## Estimate bootstrapped calibration curve   curve.est <-     calib_blr(data.mstate = msebmtcal,                    data.raw = data.boot,                    j=1,                    s=0,                    t = t,                    tp.pred = tp.pred.boot,                    curve.type = \"rcs\",                    rcs.nk = 3,                    weights = weights.manual,                    data.pred.plot = data.pred.plot,                    transitions.out = state.k)    ## Extract observed event probabilities   curve.obs <-     curve.est[[\"plotdata\"]][[paste(\"state\", state.k, sep = \"\")]]$obs    return(curve.obs)  } alpha <- (1-95/100)/2 valid.transitions <- which(colSums(tp.pred) != 0) plot.data.list <- vector(\"list\", length(valid.transitions)) for (k in 1:length(valid.transitions)){    ## Assign state k   state.k <- valid.transitions[k]    ## Run bootstrapping   boot.obs <- boot::boot(ebmtcal,                          calc_obs_boot,                          R = 200,                          tp.pred = tp.pred,                          state.k = state.k)$t    ## Extract confidence bands   lower <- apply(boot.obs, 2, stats::quantile, probs = alpha, na.rm = TRUE)   upper <- apply(boot.obs, 2, stats::quantile, probs = 1-alpha, na.rm = TRUE)    ## Assign output   plot.data.list[[k]] <- data.frame(     \"pred\" = dat.calib.boot.manual[[\"plotdata\"]][[k]]$pred,     \"obs\" = dat.calib.boot.manual[[\"plotdata\"]][[k]]$obs,     \"obs.lower\" = lower,     \"obs.upper\" = upper)  } metadata <- list(\"valid.transitions\"= valid.transitions,                  \"assessed.transitions\" = valid.transitions,                  \"CI\" = 95,                  \"curve.type\" = \"rcs\") dat.calib.blr.manual <- list(\"plotdata\" = plot.data.list, \"metadata\" = metadata) attr(dat.calib.blr.manual, \"class\") <- \"calib_blr\" plot(dat.calib.blr.manual)"},{"path":"https://alexpate30.github.io/calibmsm/articles/Comparison-with-graphical-calibration-curves-in-competing-risks-setting.html","id":"data-preperation","dir":"Articles","previous_headings":"","what":"Data preperation","title":"Comparison-with-graphical-calibration-curves-in-competing-risks-setting","text":"Test link companion vignette. vignette compares calibration competing risks model using approaches provided calibmsm, namely BLR-IPCW pseudo-value approaches, graphical calibration curves developed Austin et al. (2022). use data European Society Blood Marrow Transplantation (EBMT 2023), contains multistate survival data transplant patients blood cancer. start follow day transplant initial state alive remission. three intermediate events (\\(2\\): recovery, \\(3\\): adverse event, \\(4\\): recovery + adverse event), two absorbing states (\\(5\\): relapse \\(6\\): death). data originally made available mstate package (Wreede, Fiocco, Putter 2011). example, treat transitions first state standalone competing risks model setting subsequent states absorbing states. ignoring subsequent multistate aspect data. first load predicted transition probabilities individual model, provided dataset tp.cmprsk.j0. code deriving available source code package (see prepare_vignette_cmprsk_data.R). generated specifying transition matrix define competing risks model (.e. subsequent states act absorbing states), generate predicted risks (cumulative incidence functions) using theory Putter, Fiocco, Geskus (2007). derived using software mstate (Wreede, Fiocco, Putter 2011). Predicted risks generated individual using leave-one-approach (.e. individual removed dataset, fitting competing risks model generating predicted risks). following four variables used estimate predicted risks: year transplant (year), age transplant (age), prophylaxis given (proph), whether donor gender matched (match). transition probabilities stored object tp.cmprsk.j0. Datasets formats required functions calib_blr calib_pv stored ebmtcal (data.raw argument) msebmtcal.cmprsk (data.mstate argument). Note ebmtcal dataset can still used argument data.raw, new dataset data.mstate argument required, reflects fact now competing risks data structure. Please refer vignette(\"Overview\") details datasets formatted. assess calibration 5 years (1826 days) methods.","code":"library(calibmsm)  data(\"tp.cmprsk.j0\") head(tp.cmprsk.j0) #>   id   pstate1   pstate2   pstate3 pstate4    pstate5    pstate6        se1 #> 1  1 0.1135057 0.4093590 0.3964498       0 0.02688596 0.05379955 0.01291270 #> 2  2 0.1135518 0.4114981 0.3942408       0 0.02689840 0.05381085 0.01291690 #> 3  3 0.1131989 0.4117482 0.3944988       0 0.02681945 0.05373457 0.01289565 #> 4  4 0.1376981 0.3870386 0.3728509       0 0.04027730 0.06213511 0.01858789 #> 5  5 0.1227877 0.4277392 0.3496972       0 0.03130458 0.06847131 0.01945048 #> 6  6 0.1131989 0.4117482 0.3944988       0 0.02681945 0.05373457 0.01289565 #>          se2        se3 se4         se5         se6 #> 1 0.01918215 0.01874680   0 0.006339773 0.007719292 #> 2 0.01920148 0.01870398   0 0.006342388 0.007719937 #> 3 0.01921355 0.01871733   0 0.006325238 0.007708340 #> 4 0.02447306 0.02323096   0 0.010698591 0.010818696 #> 5 0.02777129 0.02476595   0 0.009947925 0.012554747 #> 6 0.01921355 0.01871733   0 0.006325238 0.007708340  data(\"ebmtcal\") head(ebmtcal) #>   id  rec rec.s   ae ae.s recae recae.s  rel rel.s  srv srv.s      year agecl #> 1  1   22     1  995    0   995       0  995     0  995     0 1995-1998 20-40 #> 2  2   29     1   12    1    29       1  422     1  579     1 1995-1998 20-40 #> 3  3 1264     0   27    1  1264       0 1264     0 1264     0 1995-1998 20-40 #> 4  4   50     1   42    1    50       1   84     1  117     1 1995-1998 20-40 #> 5  5   22     1 1133    0  1133       0  114     1 1133     0 1995-1998   >40 #> 6  6   33     1   27    1    33       1 1427     0 1427     0 1995-1998 20-40 #>   proph              match dtcens dtcens.s #> 1    no no gender mismatch    995        1 #> 2    no no gender mismatch    422        0 #> 3    no no gender mismatch   1264        1 #> 4    no    gender mismatch     84        0 #> 5    no    gender mismatch    114        0 #> 6    no no gender mismatch   1427        1  data(\"msebmtcal.cmprsk\") head(msebmtcal.cmprsk) #>   id from to trans Tstart Tstop time status #> 1  1    1  2     1      0    22   22      1 #> 2  1    1  3     2      0    22   22      0 #> 3  1    1  5     3      0    22   22      0 #> 4  1    1  6     4      0    22   22      0 #> 5  2    1  2     1      0    12   12      0 #> 6  2    1  3     2      0    12   12      1"},{"path":"https://alexpate30.github.io/calibmsm/articles/Comparison-with-graphical-calibration-curves-in-competing-risks-setting.html","id":"assess-calibration-using-blr-ipcw","dir":"Articles","previous_headings":"","what":"Assess calibration using BLR-IPCW","title":"Comparison-with-graphical-calibration-curves-in-competing-risks-setting","text":"first assess calibration competing risks model using BLR-IPCW approach, implemented calib_blr. Figure 1: Calibration plots competing risks model starting state using BLR-IPCW","code":"### Estimate calibration curves dat.calib.blr <-   calib_blr(data.mstate = msebmtcal.cmprsk,                  data.raw = ebmtcal,                  j=1,                  s=0,                  t = 1826,                  tp.pred = tp.cmprsk.j0 |>                    dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))),                  curve.type = \"rcs\",                  rcs.nk = 3,                  w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),                  CI = 95,                  CI.R.boot = 200)  ### Turn into plot and print plot.calibmsm.blr <- plot(dat.calib.blr, combine = TRUE, nrow = 2, ncol = 3) plot.calibmsm.blr"},{"path":"https://alexpate30.github.io/calibmsm/articles/Comparison-with-graphical-calibration-curves-in-competing-risks-setting.html","id":"assess-calibration-using-pseudo-values","dir":"Articles","previous_headings":"","what":"Assess calibration using pseudo-values","title":"Comparison-with-graphical-calibration-curves-in-competing-risks-setting","text":"Next assess calibration competing risks model using pseudo-value approach, implemented calib_pv. Figure 2: Calibration plots competing risks model starting state using pseudo-values","code":"### Estimate calibration curves dat.calib.pv <-   calib_pv(data.mstate = msebmtcal.cmprsk,                  data.raw = ebmtcal,                  j=1,                  s=0,                  t = 1826,                  tp.pred = tp.cmprsk.j0 |>                    dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))),                  curve.type = \"rcs\",                  rcs.nk = 3,                  n.pctls = 9,                  CI = 95,                  CI.type = \"parametric\") #> [1] \"Calculate pseudo values for state =  1 2023-08-02 10:00:02.084032\" #> [1] \"Calculate pseudo values for state =  2 2023-08-02 10:03:38.042139\" #> [1] \"Calculate pseudo values for state =  3 2023-08-02 10:07:14.317727\" #> [1] \"Calculate pseudo values for state =  5 2023-08-02 10:10:52.529299\" #> [1] \"Calculate pseudo values for state =  6 2023-08-02 10:14:28.203655\"  ### Turn into plot and print plot.calibmsm.pv <- plot(dat.calib.pv, combine = TRUE, nrow = 2, ncol = 3) plot.calibmsm.pv"},{"path":"https://alexpate30.github.io/calibmsm/articles/Comparison-with-graphical-calibration-curves-in-competing-risks-setting.html","id":"assess-calibration-using-graphical-calibration-curves","dir":"Articles","previous_headings":"","what":"Assess calibration using graphical calibration curves","title":"Comparison-with-graphical-calibration-curves-in-competing-risks-setting","text":"Finally assess calibration competing risks model using graphical calibration curves approach Austin et al. (2022). custom function written , estimates calibration curves returns list plots using ggplot2. function applied estimate calibration curves create plots. Figure 3: Calibration plots competing risks model starting state using graphical calibration curves","code":"### Estimate calibration curves and create plots plot.gcc.rcs.list <- calc.calib.gcc.mod(data.mstate = msebmtcal.cmprsk,                                     data.raw = ebmtcal,                                     j = 1,                                     s = 0,                                     t = 1826,                                     p.est = tp.cmprsk.j0[,paste(\"pstate\", 1:6, sep = \"\")],                                     nk = 3)  ### Combine into one plot and print plot.gcc.rcs <- ggpubr::ggarrange(plotlist = plot.gcc.rcs.list) plot.gcc.rcs"},{"path":"https://alexpate30.github.io/calibmsm/articles/Comparison-with-graphical-calibration-curves-in-competing-risks-setting.html","id":"comarpsion-of-results","dir":"Articles","previous_headings":"","what":"Comarpsion of results","title":"Comparison-with-graphical-calibration-curves-in-competing-risks-setting","text":"calibration transition probabilities similar irrespective method used assess calibration. exception calibration transition probabilities state 3 using BLR-IPCW approach. Possible reasons discussed vignette(\"Evaluation--estimation--IPCWs\"). Note graphical calibration curves approach provide way assess calibration state 1.","code":""},{"path":"https://alexpate30.github.io/calibmsm/articles/Evaluation-of-estimation-of-IPCWs.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Evaluation-of-estimation-of-IPCWs","text":"assessing calibration using BLR-IPCW pseudo-value approaches (see vignette(\"Overview\")), found predominately good agreement calibration curves except assessing calibration transition probabilities state \\(j = 1\\) state \\(k = 3\\). Given know true calibration transition probabilities say sure calibration curve correct. However, can take steps test assumptions made methods, may help guide method assessing calibration used particular clinical example.","code":""},{"path":"https://alexpate30.github.io/calibmsm/articles/Evaluation-of-estimation-of-IPCWs.html","id":"methods-and-results","dir":"Articles","previous_headings":"","what":"Methods and Results","title":"Evaluation-of-estimation-of-IPCWs","text":"BLR-IPCW requires outcome, \\(I_{k}(t)\\), independent censoring mechanism re-weighted population. Psuedo-values require non-informative censoring within subgroups within calculated. key variable predicts censoring mechanism year transplant, year. Individuals transplant recently shorter administrative censoring time, given shorter maximum follow . calculating pseudo-values, can completely remove impact variable calculating pseudo-values within subgroups defined variable. vignette(\"Overview\") also group patients predicted risk three subgroups. therefore believe assumption pseudo-value approach likely hold. implementing BLR-IPCW approach, important step estimation weights. calibmsm done internally using cox proportional hazards model. fit model ebmtcal data manually assess well specified. start loading ebmtcal data. followed fitting cox model predict probability censored. model used estimate inverse probability censoring weights (IPCWs) implementing BLR-IPCW method using calib_blr setting w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"). coefficient year, particular 1995 - 1998, big. However, know year transplant likely highly predictive censored, exploration needed. key assumption made model proportional hazards. plot cumulative hazard estimate using Kaplan-Meier survival curves stratified year transplant assess proportionality visually. Figure 1: Cumulative hazard calculated within subgroups defined year transplant","code":"set.seed(101)  library(calibmsm)  data(\"ebmtcal\") head(ebmtcal) #>   id  rec rec.s   ae ae.s recae recae.s  rel rel.s  srv srv.s      year agecl #> 1  1   22     1  995    0   995       0  995     0  995     0 1995-1998 20-40 #> 2  2   29     1   12    1    29       1  422     1  579     1 1995-1998 20-40 #> 3  3 1264     0   27    1  1264       0 1264     0 1264     0 1995-1998 20-40 #> 4  4   50     1   42    1    50       1   84     1  117     1 1995-1998 20-40 #> 5  5   22     1 1133    0  1133       0  114     1 1133     0 1995-1998   >40 #> 6  6   33     1   27    1    33       1 1427     0 1427     0 1995-1998 20-40 #>   proph              match dtcens dtcens.s #> 1    no no gender mismatch    995        1 #> 2    no no gender mismatch    422        0 #> 3    no no gender mismatch   1264        1 #> 4    no    gender mismatch     84        0 #> 5    no    gender mismatch    114        0 #> 6    no no gender mismatch   1427        1 model.ipcw <- survival::coxph(survival::Surv(dtcens, dtcens.s) ~ year + agecl + proph + match, data = ebmtcal) model.ipcw #> Call: #> survival::coxph(formula = survival::Surv(dtcens, dtcens.s) ~  #>     year + agecl + proph + match, data = ebmtcal) #>  #>                           coef exp(coef)  se(coef)      z      p #> year1990-1994         1.781086  5.936299  0.093909 18.966 <2e-16 #> year1995-1998         3.796330 44.537437  0.118184 32.122 <2e-16 #> agecl20-40           -0.135434  0.873337  0.064500 -2.100 0.0357 #> agecl>40             -0.084436  0.919031  0.080513 -1.049 0.2943 #> prophyes             -0.072379  0.930179  0.069379 -1.043 0.2968 #> matchgender mismatch -0.006291  0.993729  0.064812 -0.097 0.9227 #>  #> Likelihood ratio test=1351  on 6 df, p=< 2.2e-16 #> n= 2279, number of events= 1376 kmfit <- survival::survfit(survival::Surv(dtcens, dtcens.s) ~ year, data = ebmtcal) plot(kmfit, fun = \"cumhaz\", col = c(1,2,3), xlab = \"Days\", ylab = \"Cumulative hazard\") legend(1,6.5,c(\"1985 - 1989\", \"1990 - 1994\", \"1995 - 1998\"), col = c(1,2,3), lty = c(1, 1, 1))"},{"path":"https://alexpate30.github.io/calibmsm/articles/Evaluation-of-estimation-of-IPCWs.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"Evaluation-of-estimation-of-IPCWs","text":"Clearly proportional hazards assumption hold. means model estimating weights misspecified estimated IPCWs likely wrong. variable year transplant removed model estimating weights help ensure proportional hazards assumption met, know variable highly predictive censored, therefore omitting key predictor also result misspecified model incorrect weights. therefore conclude unlikely assumptions hold BLR-IPCW method, resulting biased calibration curves particular scenario. developing model practice, recommend assessing calibration using pseudo-value approach. fundamental problem BLR-IPCW approach, issue estimating IPCWs, estimated correctly result unbiased calibration curves. suggested vignette(\"Overview\"), simulation studies required rigorously test robustness method assumptions hold, scenario method likely give biased calibration curves. vignette also highlighted limitations using cox proportional hazards model estimate IPCWs. calibmsm package developed provide set tools assess calibration multistate models, focused package estimating IPCWs. urge users develop better models estimating IPCWs specify using weights argument. process estimating confidence intervals using bootstrapping manually estimating IPCWs exemplified vignette(\"BLR-IPCW-manual-boostrap\"). One final point, peculiar issue causes discordance calibration plots state \\(j = 0\\) state \\(k = 3\\), whereas states \\(k\\) closer agreement BLR-IPCW pseudo-value calibration curves (see Figures 2 3 vignette(\"Overview\")). hypothesise may due fact individuals move state \\(3\\) \\(100\\) days. believe likely due definition adverse event needing happen within \\(100\\) days post transplant, sure authors package involvement data collection. possible application incorrectly estimated weights, combination predicted risks outcome state behaves differently others, reason behind behaviour. However, exploration beyond scope vignette.","code":""},{"path":"https://alexpate30.github.io/calibmsm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Pate. Author, maintainer, copyright holder. Glen P Martin. Funder, reviewer.","code":""},{"path":"https://alexpate30.github.io/calibmsm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pate (2023). calibmsm: Calibration Plots Transition Probabilities Multistate Models. R package version 0.0.0.9000, https://alexpate30.github.io/calibmsm/.","code":"@Manual{,   title = {calibmsm: Calibration Plots for the Transition Probabilities from Multistate Models},   author = {Alexander Pate},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://alexpate30.github.io/calibmsm/}, }"},{"path":"https://alexpate30.github.io/calibmsm/index.html","id":"calibmsm","dir":"","previous_headings":"","what":"Calibration Plots for the Transition Probabilities from Multistate Models","title":"Calibration Plots for the Transition Probabilities from Multistate Models","text":"goal calibmsm provide set tools estimating calibration plots validating existing (.e. previously developed) multistate model.","code":""},{"path":"https://alexpate30.github.io/calibmsm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calibration Plots for the Transition Probabilities from Multistate Models","text":"package can installed CRAN follows: can install development version calibmsm GitHub :","code":"install.packages(\"calibmsm\") # install.packages(\"devtools\") devtools::install_github(\"alexpate30/calibmsm\")"},{"path":"https://alexpate30.github.io/calibmsm/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calibration Plots for the Transition Probabilities from Multistate Models","text":"basic example shows assess calibration transition probabilities 5 years follow individuals state j = 1 time s = 0 using BLR-IPCW approach. Please see Overview vignette examples assess calibration using pseudo-value MLR-IPCW approaches, well details methodology. predicted transition probabilities stored tps0, individuals data stored ebmtcal, data msdata format stored msebmtcal. Calibration curves estimated using calib_blr. Inverse probability censoring weights calculated based variables year, age, prophylaxis donor gender match. calibration curves estimated using restricted cubic splines 3 knots. 95% confidence interval calculated using bootstrapping 200 bootstrap replicates.","code":"## Load calibmsm library(calibmsm)  ## Extract relevant predicted risks from tps0 tp.pred <- dplyr::select(dplyr::filter(tps0, j == 1), any_of(paste(\"pstate\", 1:6, sep = \"\")))  ## Calculate observed event probabilities dat.calib.blr <-   calib_blr(data.mstate = msebmtcal,                  data.raw = ebmtcal,                  j = 1,                  s = 0,                  t = 1826,                  tp.pred = tp.pred,                  curve.type = \"rcs\",                  rcs.nk = 3,                  w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),                  CI = 95,                  CI.R.boot = 200)  ## Plot calibration plots plot(dat.calib.blr, combine = TRUE, nrow = 2, ncol = 3)"},{"path":"https://alexpate30.github.io/calibmsm/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Calibration Plots for the Transition Probabilities from Multistate Models","text":"encounter bug, please file issue minimal reproducible example GitHub.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_aj.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Aalen-Johansen estimator for a cohort of individuals — calc_aj","title":"Estimate Aalen-Johansen estimator for a cohort of individuals — calc_aj","text":"Estimates Aalen-Johansen estimator transition probabilities cohort data.mstate. Estimates transition probabilities time t state j time 0 Aalen-Johansen estimator entire cohort (including individual person_id.eval) inputted manually (obs.aj), speed computational time calculating pseudo-values multiple individuals cohort.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_aj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Aalen-Johansen estimator for a cohort of individuals — calc_aj","text":"","code":"calc_aj(data.mstate, tmat, t, j)"},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_aj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Aalen-Johansen estimator for a cohort of individuals — calc_aj","text":"data.mstate Validation data msdata format tmat Transition probability matrix t Follow time calibration assessed j Landmark state predictions made","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_pv_aj.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate pseudo-values for the transition probabilities based on the Aalen-Johansen estimator — calc_pv_aj","title":"Estimate pseudo-values for the transition probabilities based on the Aalen-Johansen estimator — calc_pv_aj","text":"Estimates pseudo-values individual (person_id.eval) cohort data.mstate. Calculates psuedo-values transition probabilities time t state j time 0 Aalen-Johansen estimator entire cohort (including individual person_id.eval) inputted manually (obs.aj), speed computaitonal time calculating pseudo-values multiple individuals cohort.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_pv_aj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate pseudo-values for the transition probabilities based on the Aalen-Johansen estimator — calc_pv_aj","text":"","code":"calc_pv_aj(person_id.eval, data.mstate, obs.aj, tmat, n.cohort, t, j)"},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_pv_aj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate pseudo-values for the transition probabilities based on the Aalen-Johansen estimator — calc_pv_aj","text":"person_id.eval id individual calculate pseudo-value data.mstate Validation data msdata format obs.aj Aalen-Johansen estimator transition probabilities entire cohort (excluding person_id.eval) tmat Transition probability matrix n.cohort Size cohort (number unique entries data.mstate) t Follow time calibration assessed j Landmark state predictions made","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate inverse probability of censoring weights at time t. — calc_weights","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"Estimates inverse probability censoring weights fitting cox-propotinal hazards model landmark cohort individuals. Primarily used internally, function exported allow users reproduce results vignette estimating confidence intervals using bootstrapping manually.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"","code":"calc_weights(   data.mstate,   data.raw,   covs = NULL,   t,   s,   landmark.type = \"state\",   j = NULL,   max.weight = 10,   stabilised = FALSE,   max.follow = NULL )"},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"data.mstate Validation data msdata format data.raw Validation data data.frame (one row per individual) covs Character vector variable names adjust calculating inverse probability censoring weights t Follow time calculate weights s Landmark time predictions made landmark.type Whether weights estimated individuals uncensored time s ('') individuals uncensored state j time s ('state') j Landmark state predictions made (required landmark.type = 'state') max.weight Maximum bound weights stabilised Indicates whether weights stabilised max.follow Maximum follow model calculating inverse probability censoring weights. Reducing t + 1 may aid proportional hazards assumption met model.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"dataframe three columns. id corresponds patient ids data.raw. ipcw contains inverse probability censoring weights (specifically inverse probability uncesored). pcw = 1/ipcw. stabilised = TRUE specified, fourth variable ipcw.stab returned, stabilised inverse probability censoring weights.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"Estimates inverse probability censoring weights (Hernan M, Robins J, 2020). Fits cox proportional hazards model individuals landmark cohort, predicting probability censored time t. landmark cohort may either individuals uncensored time s, uncensored state j time s. predictors w.covs assumed linear effect hazard. Weights estimated individuals data.raw, even used analysis meet landmarking requirements. individual enters absorbing state prior t, estimate probability censored time entry absorbing state, rather t. Details provided vignette overview.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"Hernan M, Robins J (2020). “12.2 Estimating IP weights via modeling.” Causal Inference: , chapter 12.2. Chapman Hall/CRC, Boca Raton.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"","code":"# Estimate inverse probability of censoring weights for individual in cohort ebmtcal. # Specifically the probability of being uncensored at t = 1826 days. # Weights are estimated using a model fitted in all individuals uncensored at time s = 0. weights.manual <- calc_weights(data.mstate = msebmtcal,   data.raw = ebmtcal,   covs = c(\"year\", \"agecl\", \"proph\", \"match\"),   t = 1826,   s = 0,   landmark.type = \"state\",   j = 1)   str(weights.manual) #> 'data.frame':\t2279 obs. of  3 variables: #>  $ id  : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ ipcw: num  NA 1.14 NA 1.01 1.03 ... #>  $ pcw : num  NA 0.879 NA 0.99 0.975 ..."},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_blr.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate calibration curves for a multistate model using binary logistic regression calibration techniques and inverse probability of censoring weights.' — calib_blr","title":"Estimate calibration curves for a multistate model using binary logistic regression calibration techniques and inverse probability of censoring weights.' — calib_blr","text":"Creates underlying data calibration curves. calib_blr estimates observed event probabilities given set predicted transition probabilities cohort interest. done using techniques assessing calibration binary logistic regression models, combination inverse probability censoring weights landmarking.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_blr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate calibration curves for a multistate model using binary logistic regression calibration techniques and inverse probability of censoring weights.' — calib_blr","text":"","code":"calib_blr(   data.mstate,   data.raw,   j,   s,   t,   tp.pred,   curve.type = \"rcs\",   rcs.nk = 3,   loess.span = 0.75,   loess.degree = 2,   weights = NULL,   w.function = NULL,   w.covs = NULL,   w.landmark.type = \"state\",   w.max = 10,   w.stabilised = FALSE,   w.max.follow = NULL,   CI = FALSE,   CI.type = \"bootstrap\",   CI.R.boot = NULL,   data.pred.plot = NULL,   transitions.out = NULL,   ... )"},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_blr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate calibration curves for a multistate model using binary logistic regression calibration techniques and inverse probability of censoring weights.' — calib_blr","text":"data.mstate Validation data msdata format data.raw Validation data data.frame (one row per individual) j Landmark state predictions made s Landmark time predictions made t Follow time calibration assessed tp.pred Matrix predicted transition probabilities time t, state j time s. must seperate column predicted transition probabilities every state, even predicted transition probabilities 0. curve.type Whether calibration curves estimated using restricted cubic splines ('rcs') loess smoothers ('loess') rcs.nk Number knots curves estimated using restricted cubic splines loess.span Span curves estimated using loess smoothers loess.degree Degree curves estimated. using loess smoothers weights Vector inverse probability censoring weights w.function Custom function estimating inverse probability censoring weights w.covs Character vector variable names adjust calculating inverse probability censoring weights w.landmark.type Whether weights estimated individuals uncensored time s ('') individuals uncensored state j time s ('state') w.max Maximum bound inverse probability censoring weights w.stabilised Indicates whether inverse probability censoring weights stabilised w.max.follow Maximum follow model calculating inverse probability censoring weights. Reducing t + 1 may aid proportional hazards assumption met model. CI Size confidence intervals % CI.type Method estimating confidence interval (currently restricted bootstrap) CI.R.boot Number bootstrap replicates estimating confidence interval calibration curve data.pred.plot Data frame matrix predicted risks possible transition plot calibration curves. Must one column every possible transition. transitions.Transitions calculate calibration curves. possible transitions left NULL. ... Extra arguments passed w.function (custom function estimating weights)","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_blr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate calibration curves for a multistate model using binary logistic regression calibration techniques and inverse probability of censoring weights.' — calib_blr","text":"calib_blr returns list containing two elements: plotdata metadata. plotdata element contains data calibration curves. list element containing calibration plot data transition probabilities possible states. list element contains patient ids (id) data.raw, predicted transition probabilities (pred) estimated observed event probabilities (obs). confidence interval requested, upper (obs.upper) lower (obs.lower) bounds observed event probabilities also returned. data.pred.plot defined manually, column (id) returned. metadata element contains metadata including: vector possible transitions, vector transitions calibration curves estimated , size confidence interval, method estimating calibration curve user specified information.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_blr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate calibration curves for a multistate model using binary logistic regression calibration techniques and inverse probability of censoring weights.' — calib_blr","text":"Observed event probabilities time t estimated predicted transition probabilities tp.pred state j time s. calib_blr estimates calibration curves using techniques assessing calibration binary logistic regression models (Van Calster et al., 2016). choice restricted cubic splines loess smoothers estimating calibration curve can made using curve.type. Landmarking applied assess calibration individuals uncensored state j time s. Censoring dealt using inverse probability censoring weights (Hernan M, Robins J, 2020). Two datasets cohort inidividuals must provided. Firstly data.mstate must dataset class msdata, generated using [mstate] package. dataset used apply landmarking. Secondly, data.raw must data.frame one row per individual, containing desired variables estimating weights, variables time censoring (dtcens), indicator censoring dtcens.s, (dtcens.s = 1) individual censored time dtcens, dtcens.s = 0 otherwise. individual enters absorbing state, prevents censoring happening (.e. dtcens.s = 0). Unless user specifies weights using weights, weights estimated using cox-proportional hazard model, assuming linear functional form variables defined w.covs. urge users specify model estimating weights. weights argument must vector length equal number rows data.raw. Confidence intervals calibration curves can estimated using bootstrapping. procedure uses internal method estimating weights, therefore encourage users specify bootstrapping procedure, incorporates model estimating weights. Details provided vignette BLR-IPCW-manual-bootstrap. calibration curves can plotted using plot.calib_blr.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_blr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate calibration curves for a multistate model using binary logistic regression calibration techniques and inverse probability of censoring weights.' — calib_blr","text":"Hernan M, Robins J (2020). “12.2 Estimating IP weights via modeling.” Causal Inference: , chapter 12.2. Chapman Hall/CRC, Boca Raton. Van Calster B, Nieboer D, Vergouwe Y, De Cock B, Pencina MJ, Steyerberg EW (2016). “calibration hierarchy risk models defined: utopia empirical data.” Journal Clinical Epidemiology, 74, 167–176. ISSN 18785921. doi:10.1016/j.jclinepi.2015. 12.005. URL http://dx.doi.org/10.1016/j.jclinepi.2015.12.005","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_blr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate calibration curves for a multistate model using binary logistic regression calibration techniques and inverse probability of censoring weights.' — calib_blr","text":"","code":"# Estimate BLR-IPCW calibration curves for the predicted transition # probabilities at time t = 1826, when predictions were made at time # s = 0 in state j = 1. These predicted transition probabilities are stored in tps0.  # Extract the predicted transition probabilities out of state j = 1 tp.pred <- dplyr::select(dplyr::filter(tps0, j == 1), any_of(paste(\"pstate\", 1:6, sep = \"\")))  # Now estimate the observed event probabilities for each possible transition. # 95% confidence intervals are estimated using bootstrapping with 200 # bootstrap repicates. In practice we recommend using a higher number. dat.calib.blr <- calib_blr(data.mstate = msebmtcal,  data.raw = ebmtcal,  j=1,  s=0,  t = 1826,  tp.pred = tp.pred,  w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"))  # The data for each calibration curve are stored in the \"plotdata\" list # element. str(dat.calib.blr) #> List of 2 #>  $ plotdata:List of 6 #>   ..$ state1:'data.frame':\t1778 obs. of  3 variables: #>   .. ..$ id  : int [1:1778] 2 4 5 7 10 13 14 16 18 19 ... #>   .. ..$ pred: num [1:1778] 0.114 0.1384 0.1233 0.0974 0.1137 ... #>   .. ..$ obs : num [1:1778] 0.11 0.104 0.105 0.124 0.11 ... #>   ..$ state2:'data.frame':\t1778 obs. of  3 variables: #>   .. ..$ id  : int [1:1778] 2 4 5 7 10 13 14 16 18 19 ... #>   .. ..$ pred: num [1:1778] 0.232 0.184 0.161 0.212 0.232 ... #>   .. ..$ obs : num [1:1778] 0.17 0.186 0.176 0.179 0.17 ... #>   ..$ state3:'data.frame':\t1778 obs. of  3 variables: #>   .. ..$ id  : int [1:1778] 2 4 5 7 10 13 14 16 18 19 ... #>   .. ..$ pred: num [1:1778] 0.0844 0.0758 0.0551 0.0615 0.0844 ... #>   .. ..$ obs : num [1:1778] 0.1249 0.1167 0.0919 0.1001 0.1248 ... #>   ..$ state4:'data.frame':\t1778 obs. of  3 variables: #>   .. ..$ id  : int [1:1778] 2 4 5 7 10 13 14 16 18 19 ... #>   .. ..$ pred: num [1:1778] 0.233 0.218 0.183 0.221 0.233 ... #>   .. ..$ obs : num [1:1778] 0.243 0.224 0.185 0.228 0.243 ... #>   ..$ state5:'data.frame':\t1778 obs. of  3 variables: #>   .. ..$ id  : int [1:1778] 2 4 5 7 10 13 14 16 18 19 ... #>   .. ..$ pred: num [1:1778] 0.148 0.154 0.143 0.144 0.149 ... #>   .. ..$ obs : num [1:1778] 0.191 0.165 0.222 0.212 0.188 ... #>   ..$ state6:'data.frame':\t1778 obs. of  3 variables: #>   .. ..$ id  : int [1:1778] 2 4 5 7 10 13 14 16 18 19 ... #>   .. ..$ pred: num [1:1778] 0.189 0.23 0.335 0.264 0.189 ... #>   .. ..$ obs : num [1:1778] 0.207 0.254 0.316 0.28 0.207 ... #>  $ metadata:List of 8 #>   ..$ valid.transitions   : num [1:6] 1 2 3 4 5 6 #>   ..$ assessed.transitions: num [1:6] 1 2 3 4 5 6 #>   ..$ CI                  : logi FALSE #>   ..$ CI.R.boot           : NULL #>   ..$ curve.type          : chr \"rcs\" #>   ..$ j                   : num 1 #>   ..$ s                   : num 0 #>   ..$ t                   : num 1826 #>  - attr(*, \"class\")= chr \"calib_blr\""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_mlr.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data for calibration curves using a multinomial logistic regression framework with inverse probability of censoring weights — calib_mlr","title":"Create data for calibration curves using a multinomial logistic regression framework with inverse probability of censoring weights — calib_mlr","text":"Creates underlying data calibration plots. Observed event probabilities time t estimated inputted predicted transition probabilities tp.pred state j time s. calib_mlr estimates calibration scatter plots using multinomial logistic framework combination landmarking inverse probability censoring weights. Two datasets cohort inidividuals must provided. msdata format dataset generated using mstate package. data.frame one row per individual, relevant variables estimating weights, time censoring varaible (dtcens) indicator (dtcens.s). Weights estimated using cox-proportional hazard model assuming linear functional form variables defined w.covs. urge users specify modwl estimating weights. Confidence intervals calibration scatter plots produced currently unclear present data.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_mlr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data for calibration curves using a multinomial logistic regression framework with inverse probability of censoring weights — calib_mlr","text":"","code":"calib_mlr(   data.mstate,   data.raw,   j,   s,   t,   tp.pred,   smoother.type = \"sm.ps\",   ps.int = 4,   degree = 3,   s.df = 4,   niknots = 4,   weights = NULL,   w.function = NULL,   w.covs = NULL,   w.landmark.type = \"state\",   w.max = 10,   w.stabilised = FALSE,   w.max.follow = NULL,   ... )"},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_mlr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data for calibration curves using a multinomial logistic regression framework with inverse probability of censoring weights — calib_mlr","text":"data.mstate Validation data msdata format data.raw Validation data data.frame (one row per individual) j Landmark state predictions made s Landmark time predictions made t Follow time calibration assessed tp.pred Vector predicted transition probabilities time t smoother.type Type smoothing applied. Takes values s (see s), sm.ps (see sm.ps) sm.os (see sm.os). ps.int number equally-spaced B spline intervals vector spline smoother (see sm.ps) degree degree B-spline basis vector spline smoother (see sm.ps) s.df degrees freedom vector spline (see s) niknots number interior knots (see sm.os) weights Vector inverse probability censoring weights w.function Custom function estimating inverse probability censoring weights w.covs Character vector variable names adjust calculating inverse probability censoring weights w.landmark.type Whether weights estimated individuals uncensored time s ('') individuals uncensored state j time s ('state') w.max Maximum bound inverse probability censoring weights w.stabilised Indicates whether inverse probability censoring weights stabilised w.max.follow Maximum follow model calculating inverse probability censoring weights. Reducing t + 1 may aid proportional hazards assumption met model. ... Extra arguments passed w.function (custom function estimating weights)","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_mlr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data for calibration curves using a multinomial logistic regression framework with inverse probability of censoring weights — calib_mlr","text":"calib_mlr returns list containing two elements: plotdata metadata. plotdata element contains data calibration scatter plots list element containing data transition probabilities possible states. list element contains patient ids (id), predicted transition probabilities (pred) estimated observed event probabilities (obs). metadata element contains metadata including vector possible transitions user specified information.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_mlr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create data for calibration curves using a multinomial logistic regression framework with inverse probability of censoring weights — calib_mlr","text":"Observed event probabilities time t estimated predicted transition probabilities tp.pred state j time s. calib_mlr estimates calibration scatter plots uses technique assessing calibration multinomial logistic regression models, namely nominal calibration framework van Hoorde et al. (2014, 2015). Landmarking (van Houwelingen HC, 2007) applied assess calibration individuals uncensored state j time s. Censoring dealt using inverse probability censoring weights (Hernan M, Robins J, 2020). Two datasets cohort inidividuals must provided. Firstly data.mstate must dataset class msdata, generated using [mstate] package. dataset used apply landmarking. Secondly, data.raw must data.frame one row per individual, containing desired variables estimating weights, variables time censoring (dtcens), indicator censoring dtcens.s, (dtcens.s = 1) individual censored time dtcens, dtcens.s = 0 otherwise. individual enters absorbing state, prevents censoring happening (.e. dtcens.s = 0). Unless user specifies weights using weights, weights estimated using cox-proportional hazard model, assuming linear functional form variables defined w.covs. urge users specify model estimating weights. weights argument must vector length equal number rows data.raw. Confidence intervals generated calibration scatter plots. confidence intervals estimated data point, clear plotted cohesively. Calibration plots produced specific transitions (.e. transitions.calib_blr) nominal calibration framework (van Hoorde et al., 2014, 2015) assesses calibration states simultaneously. calibration scatter plots can plotted using plot.calib_mlr.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_mlr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create data for calibration curves using a multinomial logistic regression framework with inverse probability of censoring weights — calib_mlr","text":"Hernan M, Robins J (2020). “12.2 Estimating IP weights via modeling.” Causal Inference: , chapter 12.2. Chapman Hall/CRC, Boca Raton. Van Hoorde K, Vergouwe Y, Timmerman D, Van Huffel S, Steyerberg W, Van Calster B (2014). “Assessing calibration multinomial risk prediction models.” Statistics Medicine, 33(15), 2585–2596. doi:10.1002/sim.6114. Van Hoorde K, Van Huffel S, Timmerman D, Bourne T, Van Calster B (2015). “spline-based tool assess visualize calibration multiclass risk predictions.” Journal Biomedical Informatics, 54, 283–293. ISSN 15320464. doi:10.1016/j.jbi.2014.12.016. URL http://dx.doi.org/10.1016/j.jbi.2014.12.016. van Houwelingen HC (2007). “Dynamic Prediction Landmarking Event History Analysis.” Scandinavian Journal Statistics, 34(1), 70–85. Yee TW (2015). Vector Generalized Linear Additive Models. 1 edition. Springer New, NY. ISBN 978-1-4939-4198-8. doi:10.1007/978-1-4939-2818-7. URL https://link.springer.com/book/10.1007/978-1-4939-2818-7.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_mlr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data for calibration curves using a multinomial logistic regression framework with inverse probability of censoring weights — calib_mlr","text":"","code":"# Using competing risks data out of initial state (see vignette: ... -in-competing-risk-setting). # Estimate and plot MLR-IPCW calibration scatter plots for the predicted transition # probabilities at time t = 1826, when predictions were made at time # s = 0 in state j = 1. These predicted transition probabilities are stored in tp.cmprsk.j0.  # To minimise example time we reduce the datasets to 150 individuals. # Extract the predicted transition probabilities out of state j = 1 for first 150 individuals tp.pred <- tp.cmprsk.j0 |>  dplyr::filter(id %in% 1:150) |>  dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) # Reduce ebmtcal to first 150 individuals ebmtcal <- ebmtcal |> dplyr::filter(id %in% 1:150) # Reduce msebmtcal.cmprsk to first 150 individuals msebmtcal.cmprsk <- msebmtcal.cmprsk |> dplyr::filter(id %in% 1:150)  # Now estimate the observed event probabilities for each possible transition. dat.calib.mlr <- calib_mlr(data.mstate = msebmtcal.cmprsk,  data.raw = ebmtcal,  j=1,  s=0,  t = 1826,  tp.pred = tp.pred,  w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),  ps.int = 2,  degree = 2)  # The data for each calibration scatter plots are stored in the \"plotdata\" # list element. str(dat.calib.mlr) #> List of 2 #>  $ plotdata:List of 5 #>   ..$ state1:'data.frame':\t150 obs. of  3 variables: #>   .. ..$ id  : int [1:150] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ pred: num [1:150] 0.114 0.114 0.113 0.138 0.123 ... #>   .. ..$ obs : num [1:150] 0.0433 0.0427 0.0426 0.07 0.0433 ... #>   ..$ state2:'data.frame':\t150 obs. of  3 variables: #>   .. ..$ id  : int [1:150] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ pred: num [1:150] 0.409 0.411 0.412 0.387 0.428 ... #>   .. ..$ obs : num [1:150] 0.617 0.619 0.619 0.538 0.601 ... #>   ..$ state3:'data.frame':\t150 obs. of  3 variables: #>   .. ..$ id  : int [1:150] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ pred: num [1:150] 0.396 0.394 0.394 0.373 0.35 ... #>   .. ..$ obs : num [1:150] 0.25 0.25 0.249 0.295 0.273 ... #>   ..$ state5:'data.frame':\t150 obs. of  3 variables: #>   .. ..$ id  : int [1:150] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ pred: num [1:150] 0.0269 0.0269 0.0268 0.0403 0.0313 ... #>   .. ..$ obs : num [1:150] 0.0474 0.0475 0.0472 0.0717 0.055 ... #>   ..$ state6:'data.frame':\t150 obs. of  3 variables: #>   .. ..$ id  : int [1:150] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ pred: num [1:150] 0.0538 0.0538 0.0537 0.0621 0.0685 ... #>   .. ..$ obs : num [1:150] 0.0422 0.0416 0.0419 0.0257 0.0276 ... #>  $ metadata:List of 4 #>   ..$ valid.transitions: Named int [1:5] 1 2 3 5 6 #>   .. ..- attr(*, \"names\")= chr [1:5] \"tp.pred1\" \"tp.pred2\" \"tp.pred3\" \"tp.pred5\" ... #>   ..$ j                : num 1 #>   ..$ s                : num 0 #>   ..$ t                : num 1826 #>  - attr(*, \"class\")= chr \"calib_mlr\""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_pv.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate calibration curves for a multistate model using pseudo-values. — calib_pv","title":"Estimate calibration curves for a multistate model using pseudo-values. — calib_pv","text":"Creates underlying data calibration curves. calib_pv estimates observed event probabilities given set predicted transition probabilities cohort interest. done using techniques assessing calibration binary logistic regression models, combination inverse probability censoring weights landmarking.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_pv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate calibration curves for a multistate model using pseudo-values. — calib_pv","text":"","code":"calib_pv(   data.mstate,   data.raw,   j,   s,   t,   tp.pred,   curve.type = \"rcs\",   rcs.nk = 3,   loess.span = 0.75,   loess.degree = 2,   group.vars = NULL,   n.pctls = NULL,   CI = FALSE,   CI.type = \"parametric\",   CI.R.boot = NULL,   data.pred.plot = NULL,   transitions.out = NULL )"},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_pv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate calibration curves for a multistate model using pseudo-values. — calib_pv","text":"data.mstate Validation data msdata format data.raw Validation data data.frame (one row per individual) j Landmark state predictions made s Landmark time predictions made t Follow time calibration assessed tp.pred Matrix predicted transition probabilities time t, state j time s. must seperate column predicted transition probabilities every state, even predicted transition probabilities 0. curve.type Whether calibration curves estimated using restricted cubic splines ('rcs') loess smoothers ('loess') rcs.nk Number knots curves estimated using restricted cubic splines loess.span Span curves estimated using loess smoothers loess.degree Degree curves estimated. using loess smoothers group.vars Baseline variables define groups within estimate pseudo-values n.pctls Number percentiles group individuals respect predicted transition probabilities estimating pseudo-values CI Size confidence intervals % CI.type Method estimating confidence interval (bootstrap parametric) CI.R.boot Number bootstrap replicates estimating confidence interval calibration curve using bootstrapping data.pred.plot Data frame matrix predicted risks possible transition plot calibration curves. Must one column every possible transition. transitions.Transitions calculate calibration curves. possible transitions left NULL.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_pv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate calibration curves for a multistate model using pseudo-values. — calib_pv","text":"calib_pv returns list containing two elements: plotdata metadata. plotdata element contains data calibration curves. list element containing calibration plot data transition probabilities possible states. list element contains patient ids (id) data.raw, predicted transition probabilities (pred) estimated observed event probabilities (obs). confidence interval requested, upper (obs.upper) lower (obs.lower) bounds observed event probabilities also returned. data.pred.plot defined manually, column (id) returned. metadata element contains metadata including: vector possible transitions, vector transitions calibration curves estimated , size confidence interval, method estimating calibration curve user specified information.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_pv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate calibration curves for a multistate model using pseudo-values. — calib_pv","text":"Observed event probabilities time t estimated predicted transition probabilities tp.pred state j time s. calib_pv estimates observed event probabilities using pseudo-values (Andersen PK, Pohar Perme M, 2010) calculated using Aalen-Johansen estimator (Aalen OO, Johansen S, 1978) Calibration curves generated regressing pseudo-values predicted transition probabilities. Currently calibration curves can produced using loess smoothers restricted cubic splines. updated include restricted cubic splines. Landmarking (van Houwelingen HC, 2007) applied assess calibration individuals uncensored state j time s. Two datasets cohort inidividuals must provided. Firstly data.mstate must dataset class msdata, generated using [mstate] package. dataset used apply landmarking. Secondly, data.raw must data.frame one row per individual, containing desired variables calculating pseudo-values within (baseline variables required group.vars = NULL). Confidence intervals calibration curves can estimated using bootstrapping. calibration curves can plotted using plot.calib_pv.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_pv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate calibration curves for a multistate model using pseudo-values. — calib_pv","text":"Aalen OO, Johansen S. Empirical Transition Matrix Non-Homogeneous Markov Chains Based Censored Observations. Scand J Stat. 1978;5(3):141-150. Andersen PK, Pohar Perme M. Pseudo-observations survival analysis. Stat Methods Med Res. 2010;19(1):71-99. doi:10.1177/0962280209105020 van Houwelingen HC (2007). “Dynamic Prediction Landmarking Event History Analysis.” Scandinavian Journal Statistics, 34(1), 70–85.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_pv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate calibration curves for a multistate model using pseudo-values. — calib_pv","text":"","code":"# Using competing risks data out of initial state (see vignette: comparison-with-graphical-calibration-curves-in-competing-risk-setting). # Estimate pseudo-value calibration curves for the predicted transition # probabilities at time t = 1826, when predictions were made at time # s = 0 in state j = 1. These predicted transition probabilities are stored in tp.cmprsk.j0.  # To minimise example time we reduce the datasets to 50 individuals. # Extract the predicted transition probabilities out of state j = 1 for first 50 individuals tp.pred <- tp.cmprsk.j0 |>  dplyr::filter(id %in% 1:50) |>  dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) # Reduce ebmtcal to first 50 individuals ebmtcal <- ebmtcal |> dplyr::filter(id %in% 1:50) # Reduce msebmtcal.cmprsk to first 50 individuals msebmtcal.cmprsk <- msebmtcal.cmprsk |> dplyr::filter(id %in% 1:50)  # Now estimate the observed event probabilities for each possible transition. dat.calib.pv <- calib_pv(data.mstate = msebmtcal.cmprsk,   data.raw = ebmtcal,   j = 1,   s = 0,   t = 1826,   tp.pred = tp.pred,   curve.type = \"loess\",   loess.span = 1,   loess.degree = 1)  # The data for each calibration curve are stored in the \"plotdata\" list # element. str(dat.calib.pv) #> List of 2 #>  $ plotdata:List of 5 #>   ..$ state1:'data.frame':\t50 obs. of  3 variables: #>   .. ..$ id  : num [1:50] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ pred: num [1:50] 0.114 0.114 0.113 0.138 0.123 ... #>   .. ..$ obs : num [1:50] 0.0123 0.0123 0.0121 0.0271 0.0184 ... #>   ..$ state2:'data.frame':\t50 obs. of  3 variables: #>   .. ..$ id  : num [1:50] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ pred: num [1:50] 0.409 0.411 0.412 0.387 0.428 ... #>   .. ..$ obs : num [1:50] 0.395 0.396 0.397 0.381 0.406 ... #>   ..$ state3:'data.frame':\t50 obs. of  3 variables: #>   .. ..$ id  : num [1:50] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ pred: num [1:50] 0.396 0.394 0.394 0.373 0.35 ... #>   .. ..$ obs : num [1:50] 0.671 0.653 0.655 0.474 0.315 ... #>   ..$ state5:'data.frame':\t50 obs. of  3 variables: #>   .. ..$ id  : num [1:50] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ pred: num [1:50] 0.0269 0.0269 0.0268 0.0403 0.0313 ... #>   .. ..$ obs : num [1:50] 0.0727 0.0727 0.0728 0.0597 0.0689 ... #>   ..$ state6:'data.frame':\t50 obs. of  3 variables: #>   .. ..$ id  : num [1:50] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ pred: num [1:50] 0.0538 0.0538 0.0537 0.0621 0.0685 ... #>   .. ..$ obs : num [1:50] 0 0 0 0 0 0 0 0 0 0 ... #>  $ metadata:List of 11 #>   ..$ valid.transitions   : num [1:5] 1 2 3 5 6 #>   ..$ assessed.transitions: num [1:5] 1 2 3 5 6 #>   ..$ curve.type          : chr \"loess\" #>   ..$ CI                  : logi FALSE #>   ..$ CI.type             : chr \"parametric\" #>   ..$ CI.R.boot           : NULL #>   ..$ j                   : num 1 #>   ..$ s                   : num 0 #>   ..$ t                   : num 1826 #>   ..$ group.vars          : NULL #>   ..$ n.pctls             : NULL #>  - attr(*, \"class\")= chr \"calib_pv\""},{"path":"https://alexpate30.github.io/calibmsm/reference/calibmsm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"calibmsm: Calibration Plots for the Transition Probabilities from Multistate Models — calibmsm-package","title":"calibmsm: Calibration Plots for the Transition Probabilities from Multistate Models — calibmsm-package","text":"Calibration plots transition probabilities multistate model. Calibration plots can also produced predicted risks survival models, competing risks models, predicted risks made landmark follow times, predicted risks landmark super models. Calibration assessed using one three methods. 1) Calibration methods binary logistic regression models applied fixed time point conjunction inverse probability censoring weights. 2) Calibration methods multinomial logistic regression models applied fixed time point conjunction inverse probability censoring weights. 3) Pseudo-values estimated using Aalen-Johansen estimator observed risk. methods applied conjunction landmarking required.","code":""},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/calibmsm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibmsm: Calibration Plots for the Transition Probabilities from Multistate Models — calibmsm-package","text":"Maintainer: Alexander Pate alexander.pate@manchester.ac.uk (ORCID) [copyright holder] contributors: Glen P Martin glen.martin@manchester.ac.uk (ORCID) [funder, reviewer]","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.html","id":null,"dir":"Reference","previous_headings":"","what":"European Group for Blood and Marrow Transplantation data — ebmtcal","title":"European Group for Blood and Marrow Transplantation data — ebmtcal","text":"data frame 2,279 individuals blood cancer undergone transplant. data identical ebmt4 data, except two extra variables derived, time censoring censoring indicator, required assess calibration using methods calibmsm. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"European Group for Blood and Marrow Transplantation data — ebmtcal","text":"","code":"ebmtcal"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.html","id":"-ebmtcal-","dir":"Reference","previous_headings":"","what":"'ebmtcal'","title":"European Group for Blood and Marrow Transplantation data — ebmtcal","text":"data frame 2,279 rows 17 columns: id Patient indentifier rec, rec.s Time event indicator recovery variable ae, ae.s Time event indicator adverse event variable recae, recae.s Time event indicator recovery + adverse event variable rel, rel.s Time event indicator relapse variable srv, srv.s Time event indicator death variable year Year transplant agecl Age transplant proph Prophylaxis match Donor-recipient match dtcens Time censoring dtcens.s Event indicator, 1:censoring occured, 0: absorbing state entered censoring occured","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"European Group for Blood and Marrow Transplantation data — ebmtcal","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"European Group for Blood and Marrow Transplantation data — ebmtcal","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/extract_ids_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify patids for individuals in state j at time t — extract_ids_states","title":"Identify patids for individuals in state j at time t — extract_ids_states","text":"Extract patids individuals state j time t dataset 'msdata' format. Used internally calib_blr, calib_mlr calib_pv.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/extract_ids_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify patids for individuals in state j at time t — extract_ids_states","text":"","code":"extract_ids_states(data.mstate, tmat, j, t)"},{"path":"https://alexpate30.github.io/calibmsm/reference/extract_ids_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify patids for individuals in state j at time t — extract_ids_states","text":"data.mstate Validation data msdata format tmat Transition probability matrix j State j t Follow time","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":null,"dir":"Reference","previous_headings":"","what":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"Used vignette: Comparison--graphical-calibration-curves--competing-risks-setting.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"","code":"msebmtcal.cmprsk"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":"-msebmtcal-cmprsk-","dir":"Reference","previous_headings":"","what":"'msebmtcal.cmprsk'","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"data frame 9,116 rows 8 columns: id Patient indentifier transition state transition state trans transition number Tstart time entered state '' Tstop time leaving state '' time time state '' status event indicator, 1:transitioned state ''","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"ebmt4 data converted msdata format (see msprep), subsequent states considered absorbing states. .e. transitions initial state considered, meaning data constitutes competing risks model initial state. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.html","id":null,"dir":"Reference","previous_headings":"","what":"European Group for Blood and Marrow Transplantation data — msebmtcal","title":"European Group for Blood and Marrow Transplantation data — msebmtcal","text":"ebmt4 data converted msdata format (see msprep), using processes implemented mstate package. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"European Group for Blood and Marrow Transplantation data — msebmtcal","text":"","code":"msebmtcal"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.html","id":"-msebmtcal-","dir":"Reference","previous_headings":"","what":"'msebmtcal'","title":"European Group for Blood and Marrow Transplantation data — msebmtcal","text":"data frame msdata format (see msprep) 15,512 rows 8 columns: id Patient indentifier transition state transition state trans transition number Tstart time entered state '' Tstop time leaving state '' time time state '' status event indicator, 1:transitioned state ''","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"European Group for Blood and Marrow Transplantation data — msebmtcal","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"European Group for Blood and Marrow Transplantation data — msebmtcal","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_blr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots calibration curves estimated using calib_blr. — plot.calib_blr","title":"Plots calibration curves estimated using calib_blr. — plot.calib_blr","text":"Plots calibration curves transition probabilities multistate model using data estimated calib_blr.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_blr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots calibration curves estimated using calib_blr. — plot.calib_blr","text":"","code":"# S3 method for calib_blr plot(x, ..., combine = TRUE, ncol = NULL, nrow = NULL, transparency.rug = 0.1)"},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_blr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots calibration curves estimated using calib_blr. — plot.calib_blr","text":"x Object class 'calib_blr' generated calib_blr. ... combine Whether combine one plot using ggarrange, return list individual plots ncol Number columns combined calibration plot nrow Number rows combined calibration plot transparency.rug Degree transparency density rug plot along axis","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_blr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots calibration curves estimated using calib_blr. — plot.calib_blr","text":"combine = TRUE, returns object classes gg, ggplot, ggarrange, ggplots combined one object. combine = FALSE, returns object class list, element containing object class gg ggplot.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_blr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots calibration curves estimated using calib_blr. — plot.calib_blr","text":"","code":"# Estimate and plot BLR-IPCW calibration curves for the predicted transition # probabilities at time t = 1826, when predictions were made at time # s = 0 in state j = 1. These predicted transition probabilities are stored in tps0.  # Extract the predicted transition probabilities out of state j = 1 tp.pred <- dplyr::select(dplyr::filter(tps0, j == 1), any_of(paste(\"pstate\", 1:6, sep = \"\")))  # Now estimate the observed event probabilities for each possible transition. dat.calib.blr <- calib_blr(data.mstate = msebmtcal,  data.raw = ebmtcal,  j=1,  s=0,  t = 1826,  tp.pred = tp.pred,  w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"))   # These are then plotted  if (FALSE) {  plot(dat.calib.blr, combine = TRUE, nrow = 2, ncol = 3)  }"},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_mlr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots calibration scatter plots estimated using calib_mlr. — plot.calib_mlr","title":"Plots calibration scatter plots estimated using calib_mlr. — plot.calib_mlr","text":"Plots calibration scatter plots transition probabilities multistate model using data estimated calib_mlr.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_mlr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots calibration scatter plots estimated using calib_mlr. — plot.calib_mlr","text":"","code":"# S3 method for calib_mlr plot(   x,   ...,   combine = TRUE,   ncol = NULL,   nrow = NULL,   transparency.plot = 0.25,   transparency.rug = 0.1 )"},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_mlr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots calibration scatter plots estimated using calib_mlr. — plot.calib_mlr","text":"x Object class 'calib_mlr' generated calib_mlr ... combine Whether combine one plot using ggarrange, return list individual plots ncol Number columns combined calibration plot nrow Number rows combined calibration plot transparency.plot Degree transparency calibration scatter plot transparency.rug Degree transparency density rug plot along axis","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_mlr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots calibration scatter plots estimated using calib_mlr. — plot.calib_mlr","text":"combine = TRUE, returns object classes gg, ggplot, ggarrange, ggplots combined one object. combine = FALSE, returns object class list, element containing object class gg ggplot.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_mlr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots calibration scatter plots estimated using calib_mlr. — plot.calib_mlr","text":"","code":"# Using competing risks data out of initial state (see vignette: ... -in-competing-risk-setting). # Estimate and plot MLR-IPCW calibration scatter plots for the predicted transition # probabilities at time t = 1826, when predictions were made at time # s = 0 in state j = 1. These predicted transition probabilities are stored in tp.cmprsk.j0.  # To minimise example time we reduce the datasets to 150 individuals. # Extract the predicted transition probabilities out of state j = 1 for first 150 individuals tp.pred <- tp.cmprsk.j0 |>  dplyr::filter(id %in% 1:150) |>  dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) # Reduce ebmtcal to first 150 individuals ebmtcal <- ebmtcal |> dplyr::filter(id %in% 1:150) # Reduce msebmtcal.cmprsk to first 150 individuals msebmtcal.cmprsk <- msebmtcal.cmprsk |> dplyr::filter(id %in% 1:150)  # Now estimate the observed event probabilities for each possible transition. dat.calib.mlr <- calib_mlr(data.mstate = msebmtcal.cmprsk,  data.raw = ebmtcal,  j=1,  s=0,  t = 1826,  tp.pred = tp.pred,  w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),  ps.int = 2,  degree = 2)   # These are then plotted  if (FALSE) {  plot(dat.calib.mlr, combine = TRUE, nrow = 2, ncol = 3)  }"},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_pv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots calibration curves estimated using calib_pv. — plot.calib_pv","title":"Plots calibration curves estimated using calib_pv. — plot.calib_pv","text":"Plots calibration curves transition probabilities multistate model using data estimated calib_pv.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_pv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots calibration curves estimated using calib_pv. — plot.calib_pv","text":"","code":"# S3 method for calib_pv plot(x, ..., combine = TRUE, ncol = NULL, nrow = NULL, transparency.rug = 0.1)"},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_pv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots calibration curves estimated using calib_pv. — plot.calib_pv","text":"x Object class 'calib_pseudo' generated calib_pv. ... combine Whether combine one plot using ggarrange, return list individual plots ncol Number columns combined calibration plot nrow Number rows combined calibration plot transparency.rug Degree transparency density rug plot along axis","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_pv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots calibration curves estimated using calib_pv. — plot.calib_pv","text":"combine = TRUE, returns object classes gg, ggplot, ggarrange, ggplots combined one object. combine = FALSE, returns object class list, element containing object class gg ggplot.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_pv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots calibration curves estimated using calib_pv. — plot.calib_pv","text":"","code":"# Using competing risks data out of initial state (see vignette: ... -in-competing-risk-setting). # Estimate and plot pseudo-value calibration curves for the predicted transition # probabilities at time t = 1826, when predictions were made at time # s = 0 in state j = 1. These predicted transition probabilities are stored in tp.cmprsk.j0.  # To minimise example time we reduce the datasets to 50 individuals. # Extract the predicted transition probabilities out of state j = 1 for first 50 individuals tp.pred <- tp.cmprsk.j0 |>  dplyr::filter(id %in% 1:50) |>  dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) # Reduce ebmtcal to first 50 individuals ebmtcal <- ebmtcal |> dplyr::filter(id %in% 1:50) # Reduce msebmtcal.cmprsk to first 50 individuals msebmtcal.cmprsk <- msebmtcal.cmprsk |> dplyr::filter(id %in% 1:50)  # Now estimate the observed event probabilities for each possible transition. dat.calib.pv <- calib_pv(data.mstate = msebmtcal.cmprsk,   data.raw = ebmtcal,   j = 1,   s = 0,   t = 1826,   tp.pred = tp.pred,   curve.type = \"loess\",   loess.span = 1,   loess.degree = 1)   # These are then plotted  if (FALSE) {  plot(dat.calib.pv, combine = TRUE, nrow = 2, ncol = 3)  }"},{"path":"https://alexpate30.github.io/calibmsm/reference/tp.cmprsk.j0.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","title":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","text":"Used vignette: Comparison--graphical-calibration-curves--competing-risks-setting. Data frame containing predicted transition probabilities state j = 1 made time s = 0, competing risks model initial state (see msebmtcal.cmprsk). predicted transition probabilities estimated fitting competing risks model msebmtcal.cmprsk data using leave-one-approach. Code deriving dataset provided source code calibmsm. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tp.cmprsk.j0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","text":"","code":"tp.cmprsk.j0"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/tp.cmprsk.j0.html","id":"-tp-cmprsk-j-","dir":"Reference","previous_headings":"","what":"'tp.cmprsk.j0'","title":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","text":"data frame 2,279 rows 13 columns: id Patient indentifier pstate1, pstate2, pstate3, pstate4, pstate5, pstate6 Predicted transition probabilities transitions states 1 6 se1, se2, se3, se4, se5, se6 Standard error predicted transition probabilities transitions states 1 6","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tp.cmprsk.j0.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tp.cmprsk.j0.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps0.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","title":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","text":"Data frame containing predicted transition probabilities state j = 1 made time s = 0. predicted transition probabilities estimated fitting multistate model ebmt4 data using leave-one-approach. Code deriving dataset provided source code calibmsm. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","text":"","code":"tps0"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/tps0.html","id":"-tps-","dir":"Reference","previous_headings":"","what":"'tps0'","title":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","text":"data frame 13,674 (CHANGE) rows 14 columns: id Patient indentifier pstate1, pstate2, pstate3, pstate4, pstate5, pstate6 Predicted transition probabilities transitions states 1 6 se1, se2, se3, se4, se5, se6 Standard error predicted transition probabilities transitions states 1 6 j State predicted transition probabilities estimated ","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps0.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps0.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps100.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicted transition probabilities out of every state made at time s = 100 — tps100","title":"Predicted transition probabilities out of every state made at time s = 100 — tps100","text":"Data frame containing predicted transition probabilities states 1 (transplant), 2 (adverse event), 3 (recovery) 4 (adverse event + recovery), made time s = 100. predicted transition probabilities estimated fitting multistate model ebmt4 data using leave-one-approach. Code deriving dataset provided source code calibmsm. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicted transition probabilities out of every state made at time s = 100 — tps100","text":"","code":"tps100"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/tps100.html","id":"-tps-","dir":"Reference","previous_headings":"","what":"'tps100'","title":"Predicted transition probabilities out of every state made at time s = 100 — tps100","text":"data frame 13,674 (CHANGE) rows 14 columns: id Patient indentifier pstate1, pstate2, pstate3, pstate4, pstate5, pstate6 Predicted transition probabilities transitions states 1 6 se1, se2, se3, se4, se5, se6 Standard error predicted transition probabilities transitions states 1 6 j State predicted transition probabilities estimated ","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps100.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicted transition probabilities out of every state made at time s = 100 — tps100","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps100.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predicted transition probabilities out of every state made at time s = 100 — tps100","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/news/index.html","id":"calibmsm-0009000","dir":"Changelog","previous_headings":"","what":"calibmsm 0.0.0.9000","title":"calibmsm 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/news/index.html","id":"calibmsm-1000000","dir":"Changelog","previous_headings":"","what":"calibmsm 1.0.0.0000","title":"calibmsm 1.0.0.0000","text":"Submission first version package CRAN. Please see Overview vignette detailed explanation package.","code":""}]
