[{"path":"https://alexpate30.github.io/calibmsm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 calibmsm authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://alexpate30.github.io/calibmsm/articles/BLR-IPCW-manual-bootstrap.html","id":"data-preperation","dir":"Articles","previous_headings":"","what":"Data preperation","title":"BLR-IPCW-manual-bootstrap","text":"vignette showcases manually apply bootstrap procedure estimate confidence interval BLR-IPCW calibration curves using custom function estimate inverse probability censoring weights. use data European Society Blood Marrow Transplantation (EBMT 2023), contains multistate survival data transplant patients blood cancer. start follow day transplant initial state alive remission. three intermediate events (\\(2\\): recovery, \\(3\\): adverse event, \\(4\\): recovery + adverse event), two absorbing states (\\(5\\): relapse \\(6\\): death). data originally made available mstate package (Wreede, Fiocco, Putter 2011). start reminding EBMT (Wreede, Fiocco, Putter 2011; EBMT 2023) validation datasets ebmtcal msebmtcal, predicted transition probabilities state j = 1 made time s = 0 multistate model (tps0). also set time want evaluate transition probabilities t. Please refer Overview vignette detailed description data.","code":"set.seed(101)  library(calibmsm)  data(\"ebmtcal\") head(ebmtcal) #>   id  rec rec.s   ae ae.s recae recae.s  rel rel.s  srv srv.s      year agecl #> 1  1   22     1  995    0   995       0  995     0  995     0 1995-1998 20-40 #> 2  2   29     1   12    1    29       1  422     1  579     1 1995-1998 20-40 #> 3  3 1264     0   27    1  1264       0 1264     0 1264     0 1995-1998 20-40 #> 4  4   50     1   42    1    50       1   84     1  117     1 1995-1998 20-40 #> 5  5   22     1 1133    0  1133       0  114     1 1133     0 1995-1998   >40 #> 6  6   33     1   27    1    33       1 1427     0 1427     0 1995-1998 20-40 #>   proph              match dtcens dtcens.s #> 1    no no gender mismatch    995        1 #> 2    no no gender mismatch    422        0 #> 3    no no gender mismatch   1264        1 #> 4    no    gender mismatch     84        0 #> 5    no    gender mismatch    114        0 #> 6    no no gender mismatch   1427        1  data(\"msebmtcal\") head(msebmtcal) #>   id from to trans Tstart Tstop time status #> 1  1    1  2     1      0    22   22      1 #> 2  1    1  3     2      0    22   22      0 #> 3  1    1  5     3      0    22   22      0 #> 4  1    1  6     4      0    22   22      0 #> 5  1    2  4     5     22   995  973      0 #> 6  1    2  5     6     22   995  973      0  data(\"tps0\") head(tps0) #>   id   pstate1   pstate2    pstate3   pstate4   pstate5   pstate6        se1 #> 1  1 0.1139726 0.2295006 0.08450376 0.2326861 0.1504855 0.1888514 0.01291133 #> 2  2 0.1140189 0.2316569 0.08442692 0.2328398 0.1481977 0.1888598 0.01291552 #> 3  3 0.1136646 0.2317636 0.08274331 0.2325663 0.1504787 0.1887834 0.01289444 #> 4  4 0.1383878 0.1836189 0.07579429 0.2179331 0.1538475 0.2304185 0.01857439 #> 5  5 0.1233226 0.1609740 0.05508100 0.1828176 0.1425950 0.3352099 0.01944967 #> 6  6 0.1136646 0.2317636 0.08462424 0.2305854 0.1505534 0.1888087 0.01289444 #>          se2        se3        se4        se5        se6 j #> 1 0.02369584 0.01257251 0.02323376 0.01648630 0.01601795 1 #> 2 0.02374329 0.01256056 0.02324869 0.01632797 0.01603703 1 #> 3 0.02375770 0.01245752 0.02322375 0.01647890 0.01601525 1 #> 4 0.03004447 0.01462570 0.03018673 0.02124071 0.02416121 1 #> 5 0.03419721 0.01367768 0.03423941 0.02329644 0.03688586 1 #> 6 0.02375770 0.01257276 0.02317348 0.01649531 0.01602438 1  t <- 1826"},{"path":"https://alexpate30.github.io/calibmsm/articles/BLR-IPCW-manual-bootstrap.html","id":"confidence-intervals-for-blr-ipcw-using-internal-bootstrapping-procedure","dir":"Articles","previous_headings":"","what":"Confidence intervals for BLR-IPCW using internal bootstrapping procedure","title":"BLR-IPCW-manual-bootstrap","text":"now remind procedure generating confidence interval, estimate confidence intervals BLR-IPCW calibration curves using internal bootstrapping procedure, done Overview vignette. Resample validation dataset replacement Landmark dataset assessment calibration Calculate inverse probability censoring weights Fit preferred calibration model landmarked dataset (restricted cubic splines loess smoother) Generate observed event probabilities fixed vector predicted transition probabilities (specifically predicted transition probabilities non-bootstrapped landmark validation dataset) code produce calibration curves confidence intervals follows: Figure 2: Calibration plots using BLR-IPCW, confidence interval estimated using manual bootstrap procedure","code":"dat.calib.blr <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j=1,            s=0,            t = t,            tp.pred = tps0 |>              dplyr::filter(j == 1) |>              dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))),            calib.type = 'blr',            curve.type = \"rcs\",            rcs.nk = 3,            w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),            CI = 95,            CI.R.boot = 200) plot(dat.calib.blr, combine = TRUE)"},{"path":"https://alexpate30.github.io/calibmsm/articles/BLR-IPCW-manual-bootstrap.html","id":"confidence-intervals-for-blr-ipcw-by-inputting-custom-weights-funciton-into-calibmsm","dir":"Articles","previous_headings":"","what":"Confidence intervals for BLR-IPCW by inputting custom weights funciton into calibmsm","title":"BLR-IPCW-manual-bootstrap","text":"approach accessible, may lead misspecified model weights given user control choice model (Cox model) functional form predictor variables \\(\\textbf{Z}\\), continuous variables assumed linear effects hazard, interaction terms. Potential issues using internal process estimating weights exemplified Evaluation--estimation--IPCWs vignette. therefore encourage users explore data produce suitable model estimate weights. Please see Overview vignette definition estimand weights estimate . function estimating weights defined, internal bootstrapping procedure can applied function estimate weights. function must contain parameters calc_weights function, even plan use parameters. parameters specified arguments w. prefix calib_msm. user specified function may also contain extra parameters calc_weights, specified ... argument calib_msm. showcase defining new function calc_weights_manual. example, define calc_weights function. practice, recommend , option allow user specify function estimating weights. Given choice function estimate weights, calibration curve Figure 1, confidence interval similar size. Figure 2: Calibration plots using BLR-IPCW, confidence interval estimated using internal bootstrap procedure custom specification function estimate weights","code":"calc_weights_manual <- calibmsm::calc_weights  dat.calib.blr.w.function <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j=1,            s=0,            t = t,            tp.pred = tps0 |>              dplyr::filter(j == 1) |>              dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))),            calib.type = 'blr',            curve.type = \"rcs\",            rcs.nk = 3,            w.function = calc_weights_manual,            w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),            CI = 95,            CI.R.boot = 200) plot(dat.calib.blr.w.function, combine = TRUE, nrow = 2, ncol = 3)"},{"path":"https://alexpate30.github.io/calibmsm/articles/BLR-IPCW-manual-bootstrap.html","id":"confidence-intervals-for-blr-ipcw-by-manually-running-bootstrapping-procedure-with-custom-function-for-estimating-the-weights","dir":"Articles","previous_headings":"","what":"Confidence intervals for BLR-IPCW by manually running bootstrapping procedure with custom function for estimating the weights","title":"BLR-IPCW-manual-bootstrap","text":"Finally, showcase run bootstrapping procedure manually. allows users parallelise code reduce computational time. done using package boot (Canty Ripley 2022) conjunction calib_msm. start creating permanent object predicted risks individual. validation cohort ebmtcal resampled, appropriate predicted transition probabilities must also resampled object. Next define predicted transition probabilities observed event probabilities plotted, must every bootstrapped calibration curve. predicted transition probabilities individuals uncensored time t, predicted transition probabilities original calibration curves. calibration curves (confidence interval) now calculated. utilise calc_weights function calibmsm estimate weights, function used internally. However, practice point exercise create better performing model estimate weights one internal procedure. vector weights entry every row validation dataset. individuals included landmark cohort, censored prior time \\(t\\), weights can take value included calibration model fitted. observed event probabilities can estimated using calib_msm call weights argument. now time estimate confidence interval curve. define function calc_obs_boot generate bootstrapped calibration curve compatible boot function boot (Canty Ripley 2022) package. Within bootstrapped dataset, weights calculated calibration curve estimated using calib_msm. use argument tp.pred.plot essential , ensure bootstrapped observed event probabilities generated vectors predicted transition probabilities. function also written estimate curve transition probabilities specific state \\(k\\), output boot must vector, rather matrix. done utilising transitions.argument calib_msm. size confidence interval, states \\(k\\) individuals may transition state \\(j\\), list store data plots defined: bootstrap procedure now applied validation dataset ebmtcal state \\(k\\) valid.transitions, upper lower confidence bands stored data.frame along calibration curve calculated earlier. Finally, metadata added appropriate class defined data format output calib_msm, meaning can used S3 generic plot. Note example assessed.transitions = valid.transitions, may case estimated calibration curves subset possible transitions. calibration curves manually estimated confidence intervals plotted Figure 3. Figure similar Figures 1 2. expected given used model estimate weights used internal procedure, verifies manual procedure calculating confidence interval successful. Figure 3: Calibration plots using BLR-IPCW, confidence interval estimated using manual bootstrap procedure Code examples can re-utilised, required specify function estimate inverse probability censoring weights.","code":"tp.pred <- tps0 |>   dplyr::filter(j == 1) |>   dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) ## Extract ids for individuals uncensored at t ids.uncens <- ebmtcal |>   subset(dtcens > t | (dtcens < t & dtcens.s == 0)) |>   dplyr::pull(id) ## Extract the predicted risks out of state 1 for these individuals tp.pred.plot <- tps0 |>   dplyr::filter(j == 1 & id %in% ids.uncens) |>   dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) weights.manual <-   calc_weights(data.mstate = msebmtcal,                data.raw = ebmtcal,                covs = c(\"year\", \"agecl\", \"proph\", \"match\"),                t = t,                s = 0,                landmark.type = \"state\",                j = 1,                max.weight = 10,                stabilised = FALSE)$ipcw str(weights.manual) #>  num [1:2279] NA 1.14 NA 1.01 1.03 ... dat.calib.boot.manual <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j = 1,            s = 0,            t = t,            tp.pred = tp.pred,            calib.type = 'blr',            curve.type = \"rcs\",            rcs.nk = 3,            weights = weights.manual) calc_obs_boot <- function(data, indices, tp.pred, state.k){      ## Bootstrap dataset and predicted transition probabilities   data.boot <- data[indices,]   tp.pred.boot <- tp.pred[indices, ]      ## Calculate weights   ## In practice - replace this function with your own   weights.manual <-     calc_weights(data.mstate = msebmtcal,                  data.raw = data.boot,                  covs = c(\"year\", \"agecl\", \"proph\", \"match\"),                  t = t,                  s = 0,                  landmark.type = \"state\",                  j = 1,                  max.weight = 10,                  stabilised = FALSE)$ipcw      ## Estimate bootstrapped calibration curve   curve.est <-     calib_msm(data.mstate = msebmtcal,              data.raw = data.boot,              j=1,              s=0,              t = t,              tp.pred = tp.pred.boot,              calib.type = 'blr',              curve.type = \"rcs\",              rcs.nk = 3,              weights = weights.manual,              tp.pred.plot = tp.pred.plot,              transitions.out = state.k)      ## Extract observed event probabilities   curve.obs <-     curve.est[[\"plotdata\"]][[paste(\"state\", state.k, sep = \"\")]]$obs      return(curve.obs)    } alpha <- (1-95/100)/2 valid.transitions <- which(colSums(tp.pred) != 0) plot.data.list <- vector(\"list\", length(valid.transitions)) for (k in 1:length(valid.transitions)){      ## Assign state k   state.k <- valid.transitions[k]      ## Run bootstrapping   boot.obs <- boot::boot(ebmtcal,                          calc_obs_boot,                          R = 200,                          tp.pred = tp.pred,                          state.k = state.k)$t      ## Extract confidence bands   lower <- apply(boot.obs, 2, stats::quantile, probs = alpha, na.rm = TRUE)   upper <- apply(boot.obs, 2, stats::quantile, probs = 1-alpha, na.rm = TRUE)      ## Assign output   plot.data.list[[k]] <- data.frame(     \"pred\" = dat.calib.boot.manual[[\"plotdata\"]][[k]]$pred,     \"obs\" = dat.calib.boot.manual[[\"plotdata\"]][[k]]$obs,     \"obs.lower\" = lower,     \"obs.upper\" = upper)    } #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? #> Warning in calib_msm(data.mstate = msebmtcal, data.raw = data.boot, j = 1, : #> All patients in data.mstate are not contained in data.raw. Landmarking can #> still be applied, but potential mismatch in these two datasets? metadata <- list(\"valid.transitions\"= valid.transitions,                  \"assessed.transitions\" = valid.transitions,                  \"CI\" = 95,                  \"curve.type\" = \"rcs\") dat.calib.blr.manual <- list(\"plotdata\" = plot.data.list, \"metadata\" = metadata) attr(dat.calib.blr.manual, \"class\") <- c(\"calib_blr\", \"calib_msm\") plot(dat.calib.blr.manual)"},{"path":"https://alexpate30.github.io/calibmsm/articles/Calibration-curves-estimated-with-loess-smoothers.html","id":"data-preperation","dir":"Articles","previous_headings":"","what":"Data preperation","title":"Calibration-curves-estimated-with-loess-smoothers","text":"vignette showcases estimate BLR-IPCW pseudo-value calibration curves using loess smoothers model estimate observed event probabilities. contrast using restricted cubic splines, done Overview vignette. approaches viable refer literature discussion method (Austin, Harrell, Klaveren 2020; Harrell 2015). mimic exactly analysis Overview vignette, specifying loess smoother rather restricted cubic splines, assess whether conclusions different. primarily showcase utility package. use data European Society Blood Marrow Transplantation (EBMT 2023), contains multistate survival data transplant patients blood cancer. start follow day transplant initial state alive remission. three intermediate events (\\(2\\): recovery, \\(3\\): adverse event, \\(4\\): recovery + adverse event), two absorbing states (\\(5\\): relapse \\(6\\): death). data originally made available mstate package (Wreede, Fiocco, Putter 2011). start reminding EBMT (Wreede, Fiocco, Putter 2011; EBMT 2023) validation datasets ebmtcal msebmtcal, predicted transition probabilities state j = 1 made time s = 0 multistate model (tps0). also set time want evaluate transition probabilities t. Please refer Overview vignette detailed description data.","code":"set.seed(101)  library(calibmsm)  data(\"ebmtcal\") head(ebmtcal) #>   id  rec rec.s   ae ae.s recae recae.s  rel rel.s  srv srv.s      year agecl #> 1  1   22     1  995    0   995       0  995     0  995     0 1995-1998 20-40 #> 2  2   29     1   12    1    29       1  422     1  579     1 1995-1998 20-40 #> 3  3 1264     0   27    1  1264       0 1264     0 1264     0 1995-1998 20-40 #> 4  4   50     1   42    1    50       1   84     1  117     1 1995-1998 20-40 #> 5  5   22     1 1133    0  1133       0  114     1 1133     0 1995-1998   >40 #> 6  6   33     1   27    1    33       1 1427     0 1427     0 1995-1998 20-40 #>   proph              match dtcens dtcens.s #> 1    no no gender mismatch    995        1 #> 2    no no gender mismatch    422        0 #> 3    no no gender mismatch   1264        1 #> 4    no    gender mismatch     84        0 #> 5    no    gender mismatch    114        0 #> 6    no no gender mismatch   1427        1  data(\"msebmtcal\") head(msebmtcal) #>   id from to trans Tstart Tstop time status #> 1  1    1  2     1      0    22   22      1 #> 2  1    1  3     2      0    22   22      0 #> 3  1    1  5     3      0    22   22      0 #> 4  1    1  6     4      0    22   22      0 #> 5  1    2  4     5     22   995  973      0 #> 6  1    2  5     6     22   995  973      0  data(\"tps0\") head(tps0) #>   id   pstate1   pstate2    pstate3   pstate4   pstate5   pstate6        se1 #> 1  1 0.1139726 0.2295006 0.08450376 0.2326861 0.1504855 0.1888514 0.01291133 #> 2  2 0.1140189 0.2316569 0.08442692 0.2328398 0.1481977 0.1888598 0.01291552 #> 3  3 0.1136646 0.2317636 0.08274331 0.2325663 0.1504787 0.1887834 0.01289444 #> 4  4 0.1383878 0.1836189 0.07579429 0.2179331 0.1538475 0.2304185 0.01857439 #> 5  5 0.1233226 0.1609740 0.05508100 0.1828176 0.1425950 0.3352099 0.01944967 #> 6  6 0.1136646 0.2317636 0.08462424 0.2305854 0.1505534 0.1888087 0.01289444 #>          se2        se3        se4        se5        se6 j #> 1 0.02369584 0.01257251 0.02323376 0.01648630 0.01601795 1 #> 2 0.02374329 0.01256056 0.02324869 0.01632797 0.01603703 1 #> 3 0.02375770 0.01245752 0.02322375 0.01647890 0.01601525 1 #> 4 0.03004447 0.01462570 0.03018673 0.02124071 0.02416121 1 #> 5 0.03419721 0.01367768 0.03423941 0.02329644 0.03688586 1 #> 6 0.02375770 0.01257276 0.02317348 0.01649531 0.01602438 1  t.eval <- 1826"},{"path":"https://alexpate30.github.io/calibmsm/articles/Calibration-curves-estimated-with-loess-smoothers.html","id":"estimation-of-calibration-curves-out-of-state-j-1-at-time-s-0-using-loess-smoothers","dir":"Articles","previous_headings":"","what":"Estimation of calibration curves out of state j = 1 at time s = 0 using loess smoothers","title":"Calibration-curves-estimated-with-loess-smoothers","text":"now produce calibration curves predicted transition probabilities state \\(j = 1\\) time \\(s = 0\\). Given individuals start state \\(1\\), need consider transition probabilities states \\(j \\neq 1\\) \\(s = 0\\). Calibration assessed follow time (\\(t = 1826\\) days). start extracting predicted transition probabilities state \\(j = 1\\) time \\(s = 0\\) object . transition probabilities aim assess calibration . now produce calibration curves using loess smoothers regression model observed event probabilities estimated. specified . Behaviour curve can controlled using , leave default example. Please refere documentation function package details parameters. smaller span /degree create smoother line. done BLR-IPCW pseudo-value calibration curves. now produce calibration plots using function. Figure 1: BLR-IPCW calibration plots state j = 1 time s = 0 estimated using loess smoothers Figure 2: pseudo-value calibration plots state j = 1 time s = 0 estimated using loess smoothers equivalent Figures Overview vignette, produced using restricted cubic splines, Figures 2 3. Write short comparison… XXXX","code":"tp.pred.s0 <- tps0 |>   dplyr::filter(j == 1) |>   dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) dat.calib.blr <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j = 1,            s = 0,            t = t.eval,            tp.pred = tp.pred.s0,            calib.type = 'blr',            curve.type = \"loess\",            w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),            CI = 95,            CI.type = \"bootstrap\",            CI.R.boot = 200) #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 1  #>  THERE ARE  92  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 0.96 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 2  #>  THERE ARE  113  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.075 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 3  #>  THERE ARE  120  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.135 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 4  #>  THERE ARE  123  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.23 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 5  #>  THERE ARE  111  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.155 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 6  #>  THERE ARE  121  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.185  dat.calib.pv <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j = 1,            s = 0,            t = t.eval,            tp.pred = tp.pred.s0,            calib.type = 'pv',            curve.type = \"loess\",            pv.group.vars = c(\"year\"),            pv.n.pctls = 3,            CI = 95,            CI.type = 'parametric') plot(dat.calib.blr) plot(dat.calib.pv)"},{"path":"https://alexpate30.github.io/calibmsm/articles/Calibration-curves-estimated-with-loess-smoothers.html","id":"estimation-of-calibration-curves-out-of-state-j-1-at-time-s-100-using-loess-smoothers","dir":"Articles","previous_headings":"","what":"Estimation of calibration curves out of state j = 1 at time s = 100 using loess smoothers","title":"Calibration-curves-estimated-with-loess-smoothers","text":"now produce calibration curves predicted transition probabilities state \\(j = 1\\) time \\(s = 100\\). Calibration assessed follow time (\\(t = 1826\\) days). start extracting predicted transition probabilities state \\(j = 1\\) time \\(s = 100\\) object . transition probabilities aim assess calibration . now produce calibration curves using loess smoothers regression model observed event probabilities estimated. specified . Behaviour curve can controlled using , leave default example. Please refere documentation function package details parameters. smaller span /degree create smoother line. done BLR-IPCW pseudo-value calibration curves. now produce calibration plots using function. Figure 3: BLR-IPCW calibration plots state j = 1 time s = 100 estimated using loess smoothers Figure 4: pseudo-value calibration plots state j = 1 time s = 100 estimated using loess smoothers equivalent Figures Overview vignette, produced using restricted cubic splines, Figures 5 6. Write short comparison…","code":"tp.pred.s100 <- tps100 |>   dplyr::filter(j == 1) |>   dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) dat.calib.blr <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j = 1,            s = 100,            t = t.eval,            tp.pred = tp.pred.s100,            calib.type = 'blr',            curve.type = \"loess\",            w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),            CI = 95,            CI.type = \"bootstrap\",            CI.R.boot = 200) #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 1  #>  THERE ARE  113  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.07 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 2  #>  THERE ARE  132  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.165 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 5  #>  THERE ARE  113  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.115 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 6  #>  THERE ARE  125  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.18  dat.calib.pv <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j = 1,            s = 100,            t = t.eval,            tp.pred = tp.pred.s100,            calib.type = 'pv',            curve.type = \"loess\",            pv.group.vars = c(\"year\"),            CI = 95,            CI.type = 'parametric') plot(dat.calib.blr) plot(dat.calib.pv)"},{"path":"https://alexpate30.github.io/calibmsm/articles/Calibration-curves-estimated-with-loess-smoothers.html","id":"estimation-of-calibration-curves-out-of-state-j-3-at-time-s-100-using-loess-smoothers","dir":"Articles","previous_headings":"","what":"Estimation of calibration curves out of state j = 3 at time s = 100 using loess smoothers","title":"Calibration-curves-estimated-with-loess-smoothers","text":"now produce calibration curves predicted transition probabilities state \\(j = 3\\) time \\(s = 100\\). Calibration assessed follow time (\\(t = 1826\\) days). start extracting predicted transition probabilities state \\(j = 3\\) time \\(s = 100\\) object . transition probabilities aim assess calibration . now produce calibration curves using loess smoothers regression model observed event probabilities estimated. specified . Behaviour curve can controlled using , leave default example. Please refere documentation function package details parameters. smaller span /degree create smoother line. done BLR-IPCW pseudo-value calibration curves. now produce calibration plots using function. Figure 5: BLR-IPCW calibration plots state j = 3 time s = 100 estimated using loess smoothers Figure 6: pseudo-value calibration plots state j = 3 time s = 100 estimated using loess smoothers equivalent Figures Overview vignette, produced using restricted cubic splines, Figures 7 8. Write short comparison… XXXX","code":"tp.pred.s100 <- tps100 |>   dplyr::filter(j == 3) |>   dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) dat.calib.blr <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j = 3,            s = 100,            t = t.eval,            tp.pred = tp.pred.s100,            calib.type = 'blr',            curve.type = \"loess\",            w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),            CI = 95,            CI.type = \"bootstrap\",            CI.R.boot = 200) #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 3  #>  THERE ARE  107  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 0.995 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 4  #>  THERE ARE  133  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.265 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 5  #>  THERE ARE  126  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.26 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 6  #>  THERE ARE  129  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.19  dat.calib.pv <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j = 3,            s = 100,            t = t.eval,            tp.pred = tp.pred.s100,            calib.type = 'pv',            curve.type = \"loess\",            pv.group.vars = c(\"year\"),            CI = 95,            CI.type = 'parametric') plot(dat.calib.blr) plot(dat.calib.pv)"},{"path":"https://alexpate30.github.io/calibmsm/articles/Calibration-curves-estimated-with-loess-smoothers.html","id":"a-note-on-the-fact-that-confidence-intervals-may-be-lower-than-0-or-bigger-than-1","dir":"Articles","previous_headings":"","what":"A note on the fact that confidence intervals may be lower than 0 or bigger than 1","title":"Calibration-curves-estimated-with-loess-smoothers","text":"Given standard error calculated probability scale , opposed logit scale, confidence intervals may exceed 0 1. checked confidence intervals calculated way CalibrationCurves package: https://cran.r-project.org/web/packages/CalibrationCurves/CalibrationCurves.pdf . particular see code val.prob.ci.2: https://github.com/BavoDC/CalibrationCurves/blob/master/R/val.prob.ci.2.R . parametric confidence intervals calculated way calculate parametric confidence intervals pseudo value approach. therefore confident correct, something ’d like come back consider implications . ’s also intriguing even bootstrapped BLR-IPCW confidence intervals, seeing confidence intervals well outside 0 1. thought issue pseudo-value parametric confidence intervals just adding 1.96*se probability scale. However, didnt actually think possible bootstrapped confidence intervals, given bootstrapped dataset, predicted-observed values still lie 0 1, something explore detail. done bit research (see test_loess_bootstrap.R test folder), values 0 driven small number individuals smallest risks. Lots predicted-observed values NAs, negative values . evident small number individuals driving NA values finding bootstrap iteration. Going try increasing span see helps. Now know mechanism, although something ’m particularly worried , seems driven small sample size assessing calibration time s = 100. Compare following graphs figures 1 2 . First . now produce calibration plots using function. Figure 7: BLR-IPCW calibration plots state j = 1 time s = 0 estimated using loess smoothers, span = 0.9 Figure 8: pseudo-value calibration plots state j = 1 time s = 0 estimated using loess smoothers, span = 0.9 . now produce calibration plots using function. Figure 9: BLR-IPCW calibration plots state j = 1 time s = 0 estimated using loess smoothers, span = 1 Figure 10: pseudo-value calibration plots state j = 1 time s = 0 estimated using loess smoothers, span = 1","code":"dat.calib.blr <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j = 1,            s = 0,            t = t.eval,            tp.pred = tp.pred.s0,            calib.type = 'blr',            curve.type = \"loess\",            loess.span = 0.9,            w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),            CI = 95,            CI.type = \"bootstrap\",            CI.R.boot = 200) #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 1  #>  THERE ARE  92  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 0.96 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 2  #>  THERE ARE  113  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.075 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 3  #>  THERE ARE  120  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.135 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 4  #>  THERE ARE  123  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.23 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 5  #>  THERE ARE  111  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.155 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 6  #>  THERE ARE  121  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.185  dat.calib.pv <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j = 1,            s = 0,            t = t.eval,            tp.pred = tp.pred.s0,            calib.type = 'pv',            curve.type = \"loess\",            loess.span = 0.9,            pv.group.vars = c(\"year\"),            pv.n.pctls = 3,            CI = 95,            CI.type = 'parametric') plot(dat.calib.blr) plot(dat.calib.pv) dat.calib.blr <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j = 1,            s = 0,            t = t.eval,            tp.pred = tp.pred.s0,            calib.type = 'blr',            curve.type = \"loess\",            loess.span = 1,            w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),            CI = 95,            CI.type = \"bootstrap\",            CI.R.boot = 200) #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 1  #>  THERE ARE  92  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 0.96 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 2  #>  THERE ARE  113  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.075 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 3  #>  THERE ARE  120  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.135 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 4  #>  THERE ARE  123  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.23 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 5  #>  THERE ARE  111  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.155 #> Warning in calib_blr_ipcw(data.raw = data.raw, data.mstate = data.mstate, : WARNING, SOME BOOTSTRAPPED OBSERVED EVENT PROBABILITIES WERE NA FOR STATE 6  #>  THERE ARE  121  ITERATIONS WITH NA's  #>  THE MEAN NUMBER OF NA's IN EACH ITERATION IS 1.185  dat.calib.pv <-   calib_msm(data.mstate = msebmtcal,            data.raw = ebmtcal,            j = 1,            s = 0,            t = t.eval,            tp.pred = tp.pred.s0,            calib.type = 'pv',            curve.type = \"loess\",            loess.span = 1,            pv.group.vars = c(\"year\"),            pv.n.pctls = 3,            CI = 95,            CI.type = 'parametric') plot(dat.calib.blr) plot(dat.calib.pv)"},{"path":"https://alexpate30.github.io/calibmsm/articles/Comparison-in-competing-risks-setting.html","id":"data-preperation","dir":"Articles","previous_headings":"","what":"Data preperation","title":"Comparison-in-competing-risks-setting","text":"vignette compares calibration competing risks model assessed using approaches provided calibmsm, namely BLR-IPCW pseudo-value approaches, graphical calibration curves developed Austin et al. (2022). use data European Society Blood Marrow Transplantation (EBMT 2023), contains multistate survival data transplant patients blood cancer. start follow day transplant initial state alive remission. three intermediate events (\\(2\\): recovery, \\(3\\): adverse event, \\(4\\): recovery + adverse event), two absorbing states (\\(5\\): relapse \\(6\\): death). data originally made available mstate package (Wreede, Fiocco, Putter 2011). example, treat transitions first state standalone competing risks model setting subsequent states absorbing states. ignoring subsequent multistate aspect data. first load predicted transition probabilities individual model, provided dataset tp.cmprsk.j0. code deriving available source code package (see prepare_vignette_cmprsk_data.R). generated specifying transition matrix define competing risks model (.e. subsequent states act absorbing states), generate predicted risks (cumulative incidence functions) using theory Putter, Fiocco, Geskus (2007). derived using software mstate (Wreede, Fiocco, Putter 2011). Predicted risks generated individual using leave-one-approach (.e. individual removed dataset fitting competing risks model estimating predicted risk individual). following four variables used estimate predicted risks: year transplant (year), age transplant (age), prophylaxis given (proph), whether donor gender matched (match). transition probabilities stored object tp.cmprsk.j0. Datasets formats required function calib_msm stored ebmtcal.cmprsk (data.raw argument) msebmtcal.cmprsk (data.mstate argument). Note ebmtcal.cmprsk ebmtcal except variables dtcens dtcens.s derived different manner. Specifically, setting entry state effect preventing censoring absorbing states, whereas ebmtcal true entry states 5 6, however difference two datasets, completely new dataset data.mstate argument required, reflects fact now competing risks data structure. Please refer Overview vignette details datasets formatted, refer source code specifically two datasets derived. assess calibration 5 years (1826 days) methods.","code":"library(calibmsm)  data(\"tp.cmprsk.j0\") head(tp.cmprsk.j0) #>   id   pstate1   pstate2   pstate3 pstate4    pstate5    pstate6        se1 #> 1  1 0.1135057 0.4093590 0.3964498       0 0.02688596 0.05379955 0.01291270 #> 2  2 0.1135518 0.4114981 0.3942408       0 0.02689840 0.05381085 0.01291690 #> 3  3 0.1131989 0.4117482 0.3944988       0 0.02681945 0.05373457 0.01289565 #> 4  4 0.1376981 0.3870386 0.3728509       0 0.04027730 0.06213511 0.01858789 #> 5  5 0.1227877 0.4277392 0.3496972       0 0.03130458 0.06847131 0.01945048 #> 6  6 0.1131989 0.4117482 0.3944988       0 0.02681945 0.05373457 0.01289565 #>          se2        se3 se4         se5         se6 #> 1 0.01918215 0.01874680   0 0.006339773 0.007719292 #> 2 0.01920148 0.01870398   0 0.006342388 0.007719937 #> 3 0.01921355 0.01871733   0 0.006325238 0.007708340 #> 4 0.02447306 0.02323096   0 0.010698591 0.010818696 #> 5 0.02777129 0.02476595   0 0.009947925 0.012554747 #> 6 0.01921355 0.01871733   0 0.006325238 0.007708340  data(\"ebmtcal.cmprsk\") head(ebmtcal.cmprsk) #>   id  rec rec.s   ae ae.s recae recae.s  rel rel.s  srv srv.s      year agecl #> 1  1   22     1  995    0   995       0  995     0  995     0 1995-1998 20-40 #> 2  2   29     1   12    1    29       1  422     1  579     1 1995-1998 20-40 #> 3  3 1264     0   27    1  1264       0 1264     0 1264     0 1995-1998 20-40 #> 4  4   50     1   42    1    50       1   84     1  117     1 1995-1998 20-40 #> 5  5   22     1 1133    0  1133       0  114     1 1133     0 1995-1998   >40 #> 6  6   33     1   27    1    33       1 1427     0 1427     0 1995-1998 20-40 #>   proph              match dtcens dtcens.s #> 1    no no gender mismatch     22        0 #> 2    no no gender mismatch     12        0 #> 3    no no gender mismatch     27        0 #> 4    no    gender mismatch     42        0 #> 5    no    gender mismatch     22        0 #> 6    no no gender mismatch     27        0  data(\"msebmtcal.cmprsk\") head(msebmtcal.cmprsk) #>   id from to trans Tstart Tstop time status #> 1  1    1  2     1      0    22   22      1 #> 2  1    1  3     2      0    22   22      0 #> 3  1    1  5     3      0    22   22      0 #> 4  1    1  6     4      0    22   22      0 #> 5  2    1  2     1      0    12   12      0 #> 6  2    1  3     2      0    12   12      1"},{"path":"https://alexpate30.github.io/calibmsm/articles/Comparison-in-competing-risks-setting.html","id":"assess-calibration-using-blr-ipcw","dir":"Articles","previous_headings":"","what":"Assess calibration using BLR-IPCW","title":"Comparison-in-competing-risks-setting","text":"first assess calibration competing risks model using BLR-IPCW approach. Figure 1: Calibration plots competing risks model starting state using BLR-IPCW","code":"### Estimate calibration curves dat.calib.blr <-   calib_msm(data.mstate = msebmtcal.cmprsk,            data.raw = ebmtcal.cmprsk,            j=1,            s=0,            t = 1826,            tp.pred = tp.cmprsk.j0 |>              dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))),            calib.type = 'blr',            curve.type = \"rcs\",            rcs.nk = 3,            w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),            CI = 95,            CI.R.boot = 200)  ### Turn into plot and print plot.calibmsm.blr <- plot(dat.calib.blr, combine = TRUE, nrow = 2, ncol = 3) plot.calibmsm.blr"},{"path":"https://alexpate30.github.io/calibmsm/articles/Comparison-in-competing-risks-setting.html","id":"assess-calibration-using-pseudo-values","dir":"Articles","previous_headings":"","what":"Assess calibration using pseudo-values","title":"Comparison-in-competing-risks-setting","text":"Next assess calibration competing risks model using pseudo-value approach, implemented calib_pv. Figure 2: Calibration plots competing risks model starting state using pseudo-values","code":"### Estimate calibration curves dat.calib.pv <-   calib_msm(data.mstate = msebmtcal.cmprsk,            data.raw = ebmtcal.cmprsk,            j=1,            s=0,            t = 1826,            tp.pred = tp.cmprsk.j0 |>              dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))),            calib.type = 'pv',            curve.type = \"rcs\",            rcs.nk = 3,            pv.group.vars = c(\"year\"),            pv.n.pctls = 3,            CI = 95,            CI.type = \"parametric\")  ### Turn into plot and print plot.calibmsm.pv <- plot(dat.calib.pv, combine = TRUE, nrow = 2, ncol = 3) plot.calibmsm.pv"},{"path":"https://alexpate30.github.io/calibmsm/articles/Comparison-in-competing-risks-setting.html","id":"assess-calibration-using-graphical-calibration-curves","dir":"Articles","previous_headings":"","what":"Assess calibration using graphical calibration curves","title":"Comparison-in-competing-risks-setting","text":"Finally assess calibration competing risks model using graphical calibration curves approach Austin et al. (2022). custom function written , estimates calibration curves returns list plots using ggplot2. function applied estimate calibration curves create plots. Figure 3: Calibration plots competing risks model starting state using graphical calibration curves","code":"calc.calib.gcc.mod <- function(data.mstate, data.raw, j, s, t, p.est, nk = 3){      ### Assign colnames to p.est   colnames(p.est) <- paste(\"p.est\", 1:ncol(p.est), sep = \"\")      ### Extract what states an individual can move into from state j (states with a non-zero predicted risk)   ### Also drop the staet that an individual is already in, because there is no cmprsk model for staying in the same state   valid.transitions <- which(colSums(p.est) != 0)   valid.transitions <- valid.transitions[-(valid.transitions == j)]      ### Add the predicted risks, and the complementary log log transormation of the predicted risks to data.raw   p.est.cll <- log(-log(1 - p.est[,valid.transitions]))   colnames(p.est.cll) <- paste(\"p.est.cll\", valid.transitions, sep = \"\")      ### Identify individuals who are in state j at time s   ids.state.j <- base::subset(data.mstate, from == j & Tstart <= s & s < Tstop) |>     dplyr::select(id) |>     dplyr::distinct(id) |>     dplyr::pull(id)      ### Subset data.mstate and data.raw to these individuals.   data.mstate <- data.mstate |> base::subset(id %in% ids.state.j)   data.raw <- data.raw |> base::subset(id %in% ids.state.j)      ### Add the cloglog risks and predicted risks to the landmark dataset   data.raw <- cbind(data.raw, p.est[,valid.transitions], p.est.cll)      ### Finally, identify individuals which are censored before experiencing any events (used to maniuplate data for Fine-Gray regression later)   ids.cens  <- data.mstate |> base::subset(from == j) |> dplyr::group_by(id) |> dplyr::summarize(sum = sum(status)) |> base::subset(sum == 0) |>     dplyr::pull(id)      ###   ### Produce calibration plots for each possible transition   ###      ### Start by creating a list to store the plots   plots.list <- vector(\"list\", length(valid.transitions))      for (k in 1:length(valid.transitions)){          ### Assign state.k     state.k <- as.numeric(valid.transitions[k])          ### Create restricted cubic splines for the cloglog of the linear predictor for the state of interst     rcs.mat <- Hmisc::rcspline.eval(data.raw[,paste(\"p.est.cll\", state.k, sep = \"\")],nk=nk,inclx=T)     colnames(rcs.mat) <- paste(\"rcs.x\", 1:ncol(rcs.mat), sep = \"\")     knots <- attr(rcs.mat,\"knots\")          ### Create a new dataframe for the validation, to avoid recurison with data.raw     ### Add the cubic splines for thecomplementary loglog of the predicted probability, and the predicted probability itself     valid.df <- data.frame(data.raw$id, data.raw[,paste(\"p.est\", state.k, sep = \"\")], rcs.mat)     colnames(valid.df) <- c(\"id\", \"pred\", colnames(rcs.mat))          ### Want to validate the competing risks model out of state j at time s, into state k, so remove individuals not in state k at time s,     ### and only retain transitions into state k. Also deduct immortal time from time variable     data.mstate.j.k.s <- base::subset(data.mstate, from == j & to == state.k & Tstart <= s & s < Tstop) |>       dplyr::mutate(time = Tstop - s) |>       dplyr::select(c(time, status))          ### Add to valid.df     valid.df <- cbind(valid.df, data.mstate.j.k.s)          ### For individuals who do not have the event of interest, and also are not censored (i.e. they have a different competing event),     ### set the follow up time to the maximum     valid.df <- dplyr::mutate(valid.df, time = dplyr::case_when(status == 0 & !(id %in% ids.cens) ~ max(time),                                                                 TRUE ~ time))          ### Create dataset to fit the recalibration model of Austin et al (Graphical calibration curves, BMC Diagnostic and Prognostic, DOI10.1186/s41512-021-00114-6)     valid.df.crprep <- mstate::crprep(Tstop='time',status='status',trans=1,                                       keep=colnames(rcs.mat),valid.df)          ### Create formula and fit the Fine-Gray recalibration model     eq.LHS <- paste(\"survival::Surv(Tstart,Tstop,status==1)~\")     eq.RHS <- paste(\"rcs.x\", 1:ncol(rcs.mat), sep = \"\", collapse = \"+\")     eq <- formula(paste(eq.LHS, eq.RHS, sep = \"\"))     model.calibrate.fg <- rms::cph(eq,weights=weight.cens,x=T,y=T,surv=T,data=valid.df.crprep)          ### Generate predicted probabilities and standard errors     valid.df$obs.fg <- 1-rms::survest(model.calibrate.fg,newdata=valid.df.crprep,time=t-s)$surv     valid.df$obs.fg.upper<-1-rms::survest(model.calibrate.fg,newdata=valid.df.crprep,time=t-s)$lower     valid.df$obs.fg.lower<-1-rms::survest(model.calibrate.fg,newdata=valid.df.crprep,time=t-s)$upper          ### Produce plots for each and store in a list          ### Pivot longer to create data for ggplot and assign appropriate labels     valid.df.longer <- tidyr::pivot_longer(valid.df, cols = c(obs.fg, obs.fg.upper, obs.fg.lower), names_to = \"line.group\")     valid.df.longer <- dplyr::mutate(valid.df.longer,                                      line.group = factor(line.group),                                      mapping = dplyr::case_when(line.group == \"obs.fg\" ~ 1,                                                                 line.group %in% c(\"obs.fg.upper\", \"obs.fg.lower\") ~ 2),                                      mapping = factor(mapping))          levels(valid.df.longer$line.group) <- c(\"Calibration\", \"Upper\", \"Lower\")     levels(valid.df.longer$mapping) <- c(\"Calibration\", \"95% CI\")          ### Create the plot     plots.list[[k]] <- ggplot2::ggplot(data = valid.df.longer |> dplyr::arrange(pred) |> dplyr::select(id, pred, line.group, value, mapping)) +       ggplot2::geom_line(ggplot2::aes(x = pred, y = value, group = line.group, color = mapping)) +       ggplot2::geom_abline(intercept = 0, slope = 1, linetype = \"dashed\") +       ggplot2::xlab(\"Predicted risk\") + ggplot2::ylab(\"Observed risk\") +       ggplot2::xlim(c(0, max(valid.df.longer$pred,                              valid.df.longer$value))) +       ggplot2::ylim(c(0, max(valid.df.longer$pred,                              valid.df.longer$value))) +       ggplot2::geom_rug(data = valid.df.longer |> dplyr::arrange(pred) |> dplyr::select(id, pred, line.group, value, mapping) |> base::subset(line.group == \"Calibration\"),                         ggplot2::aes(x = pred, y = value), col = grDevices::rgb(1, 0, 0, alpha = .1)) +       ggplot2::theme(legend.position = \"none\") +       ggplot2::ggtitle(paste(\"State \", state.k, sep = \"\"))        }      ### Return plots   return(plots.list) } ### Estimate calibration curves and create plots plot.gcc.rcs.list <- calc.calib.gcc.mod(data.mstate = msebmtcal.cmprsk,                                         data.raw = ebmtcal.cmprsk,                                         j = 1,                                         s = 0,                                         t = 1826,                                         p.est = tp.cmprsk.j0[,paste(\"pstate\", 1:6, sep = \"\")],                                         nk = 3)  ### Combine into one plot and print plot.gcc.rcs <- ggpubr::ggarrange(plotlist = plot.gcc.rcs.list) plot.gcc.rcs"},{"path":"https://alexpate30.github.io/calibmsm/articles/Comparison-in-competing-risks-setting.html","id":"comarpsion-of-results","dir":"Articles","previous_headings":"","what":"Comarpsion of results","title":"Comparison-in-competing-risks-setting","text":"calibration transition probabilities similar irrespective method used assess calibration. exception calibration transition probabilities state 3 using BLR-IPCW approach. Possible reasons discussed Evaluation--estimation--IPCWs vignette. practice, worth assessing calibration using variety approaches. agreement found, provide reassurance assessment calibration. Note graphical calibration curves approach provide way assess calibration state 1, hence difference number plots.","code":""},{"path":"https://alexpate30.github.io/calibmsm/articles/Evaluation-of-estimation-of-IPCWs.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Evaluation-of-estimation-of-IPCWs","text":"vignette explores whether assumptions BLR-IPCW psuedo-value methods assessing calibration met illustrative example Overview vignette. use data European Society Blood Marrow Transplantation (EBMT 2023), contains multistate survival data transplant patients blood cancer. start follow day transplant initial state alive remission. three intermediate events (\\(2\\): recovery, \\(3\\): adverse event, \\(4\\): recovery + adverse event), two absorbing states (\\(5\\): relapse \\(6\\): death). data originally made available mstate package (Wreede, Fiocco, Putter 2011). illustrative example Overview vignette, found predominately good agreement BLR-IPCW pseudo-value calibration curves, except assessing calibration transition probabilities state \\(j = 1\\) state \\(k = 3\\). Given know true calibration transition probabilities say sure calibration curve correct. However, can take steps test assumptions made methods, may help guide method assessing calibration used particular clinical example. suggest package users take similar steps explore method may appropriate particular clinical context.","code":""},{"path":"https://alexpate30.github.io/calibmsm/articles/Evaluation-of-estimation-of-IPCWs.html","id":"methods-and-results","dir":"Articles","previous_headings":"","what":"Methods and Results","title":"Evaluation-of-estimation-of-IPCWs","text":"start reminding EBMT (Wreede, Fiocco, Putter 2011; EBMT 2023) validation dataset ebmtcal. Please refer Overview vignette detailed description data. BLR-IPCW requires outcome, \\(I_{k}(t)\\), independent censoring mechanism re-weighted population. Psuedo-values require non-informative censoring within subgroups within calculated. key variable predicts censoring mechanism year transplant, year. Individuals transplant recently shorter administrative censoring time, given shorter maximum follow . calculating pseudo-values, can completely remove impact variable calculating pseudo-values within subgroups defined variable. Overview vignette also grouped patients predicted risk three subgroups. therefore believe assumption pseudo-value approach likely hold. implementing BLR-IPCW approach, important step estimation inverse probability censoring weights (IPCWs). calibmsm done internally using cox proportional hazards model. fit model ebmtcal data assess well specified. start loading ebmtcal data. followed fitting cox model predict probability censored. code chunk happens internally calib_blr one sets w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"). coefficient year, particular 1995 - 1998, big. However, know year transplant likely highly predictive censored, exploration needed. key assumption made model proportional hazards. plot cumulative hazard estimate using Kaplan-Meier survival curves stratified year transplant assess proportionality visually. Figure 1: Cumulative hazard calculated within subgroups defined year transplant","code":"set.seed(101)  library(calibmsm)  data(\"ebmtcal\") head(ebmtcal) #>   id  rec rec.s   ae ae.s recae recae.s  rel rel.s  srv srv.s      year agecl #> 1  1   22     1  995    0   995       0  995     0  995     0 1995-1998 20-40 #> 2  2   29     1   12    1    29       1  422     1  579     1 1995-1998 20-40 #> 3  3 1264     0   27    1  1264       0 1264     0 1264     0 1995-1998 20-40 #> 4  4   50     1   42    1    50       1   84     1  117     1 1995-1998 20-40 #> 5  5   22     1 1133    0  1133       0  114     1 1133     0 1995-1998   >40 #> 6  6   33     1   27    1    33       1 1427     0 1427     0 1995-1998 20-40 #>   proph              match dtcens dtcens.s #> 1    no no gender mismatch    995        1 #> 2    no no gender mismatch    422        0 #> 3    no no gender mismatch   1264        1 #> 4    no    gender mismatch     84        0 #> 5    no    gender mismatch    114        0 #> 6    no no gender mismatch   1427        1 model.ipcw <- survival::coxph(survival::Surv(dtcens, dtcens.s) ~ year + agecl + proph + match, data = ebmtcal) model.ipcw #> Call: #> survival::coxph(formula = survival::Surv(dtcens, dtcens.s) ~  #>     year + agecl + proph + match, data = ebmtcal) #>  #>                           coef exp(coef)  se(coef)      z      p #> year1990-1994         1.781086  5.936299  0.093909 18.966 <2e-16 #> year1995-1998         3.796330 44.537437  0.118184 32.122 <2e-16 #> agecl20-40           -0.135434  0.873337  0.064500 -2.100 0.0357 #> agecl>40             -0.084436  0.919031  0.080513 -1.049 0.2943 #> prophyes             -0.072379  0.930179  0.069379 -1.043 0.2968 #> matchgender mismatch -0.006291  0.993729  0.064812 -0.097 0.9227 #>  #> Likelihood ratio test=1351  on 6 df, p=< 2.2e-16 #> n= 2279, number of events= 1376 kmfit <- survival::survfit(survival::Surv(dtcens, dtcens.s) ~ year, data = ebmtcal) plot(kmfit, fun = \"cumhaz\", col = c(1,2,3), xlab = \"Days\", ylab = \"Cumulative hazard\") legend(1,6.5,c(\"1985 - 1989\", \"1990 - 1994\", \"1995 - 1998\"), col = c(1,2,3), lty = c(1, 1, 1))"},{"path":"https://alexpate30.github.io/calibmsm/articles/Evaluation-of-estimation-of-IPCWs.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"Evaluation-of-estimation-of-IPCWs","text":"proportional hazards assumption hold, Kaplan-Meier survival curves within group proprtional eachother every follow time. Clearly proportional hazards assumption hold. means model estimating weights misspecified estimated IPCWs may wrong. variable year transplant removed model estimating weights help ensure proportional hazards assumption met, know variable highly predictive censored, therefore omitting key predictor also result misspecified model incorrect weights. therefore conclude unlikely assumptions hold BLR-IPCW method, resulting biased calibration curves particular clinical example. developing model practice, recommend assessing calibration using pseudo-value approach. fundamental problem BLR-IPCW approach, issue estimating IPCWs censoring mechanism example. IPCWs can estimated correctly, result unbiased calibration curves. suggested Overview vignette, simulation studies required rigorously test robustness method assumptions hold, scenario method likely give biased calibration curves. vignette also highlighted limitations using cox proportional hazards model estimate IPCWs. calibmsm package developed provide set tools assess calibration multistate models, focused package estimating IPCWs. urge users develop better models estimating IPCWs specify using weights argument. process estimating confidence intervals using bootstrapping manually estimating IPCWs exemplified BLR-IPCW-manual-boostrap vignette. One final point, peculiar issue causes discordance calibration plots state \\(j = 0\\) state \\(k = 3\\), whereas states \\(k\\) closer agreement BLR-IPCW pseudo-value calibration curves (see Figures 2 3 Overview vignette). hypothesise may due fact individuals move state \\(3\\) \\(100\\) days. believe due definition adverse event needing happen within \\(100\\) days post transplant, sure authors package involvement data collection. possible application incorrectly estimated weights, combination predicted risks outcome state behaves differently others, reason behind behaviour. However, exploration beyond scope vignette.","code":""},{"path":"https://alexpate30.github.io/calibmsm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Pate. Author, maintainer, copyright holder. Glen P Martin. Funder, reviewer.","code":""},{"path":"https://alexpate30.github.io/calibmsm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pate (2024). calibmsm: Calibration Plots Transition Probabilities Multistate Models. R package version 1.1.0, https://alexpate30.github.io/calibmsm/.","code":"@Manual{,   title = {calibmsm: Calibration Plots for the Transition Probabilities from Multistate Models},   author = {Alexander Pate},   year = {2024},   note = {R package version 1.1.0},   url = {https://alexpate30.github.io/calibmsm/}, }"},{"path":"https://alexpate30.github.io/calibmsm/index.html","id":"calibmsm","dir":"","previous_headings":"","what":"Calibration Plots for the Transition Probabilities from Multistate Models","title":"Calibration Plots for the Transition Probabilities from Multistate Models","text":"goal calibmsm provide set tools estimating calibration plots validating existing (.e. previously developed) multistate model. vignettes articles package focus assessing calibration multistate model, calibration plots can also produced predicted risks dynamic models, landmark super models, competing risks models standard single outcome survival models, predictions can made landmark time. detailed guide use calibmsm please see Overview vignette.","code":""},{"path":"https://alexpate30.github.io/calibmsm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calibration Plots for the Transition Probabilities from Multistate Models","text":"package can installed CRAN follows: can install development version calibmsm GitHub :","code":"install.packages(\"calibmsm\") # install.packages(\"devtools\") devtools::install_github(\"alexpate30/calibmsm\")"},{"path":"https://alexpate30.github.io/calibmsm/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calibration Plots for the Transition Probabilities from Multistate Models","text":"basic example shows assess calibration transition probabilities 5 years follow individuals state j = 1 time s = 0 using BLR-IPCW approach. Please see Overview vignette examples assess calibration using pseudo-value MLR-IPCW approaches, well details methodology. predicted transition probabilities stored tps0, individuals data stored ebmtcal, data msdata format stored msebmtcal. Calibration curves estimated using calib_msm using BLR-IPCW method (calib.type = 'blr') inverse probability censoring weights calculated based variables year, age, prophylaxis donor gender match. calibration curves estimated using restricted cubic splines 3 knots. 95% confidence interval calculated using bootstrapping 200 bootstrap replicates.","code":"## Load calibmsm library(calibmsm)  ## Extract relevant predicted risks from tps0 tp.pred <- dplyr::select(dplyr::filter(tps0, j == 1), any_of(paste(\"pstate\", 1:6, sep = \"\")))  ## Calculate observed event probabilities dat.calib.blr <-   calib_msm(data.mstate = msebmtcal,           data.raw = ebmtcal,           j = 1,           s = 0,           t = 1826,           tp.pred = tp.pred,           calib.type = \"blr\",           curve.type = \"rcs\",           rcs.nk = 3,           w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),           CI = 95,           CI.R.boot = 200)   ## Plot calibration plots plot(dat.calib.blr, combine = TRUE, nrow = 2, ncol = 3)"},{"path":"https://alexpate30.github.io/calibmsm/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Calibration Plots for the Transition Probabilities from Multistate Models","text":"encounter bug, please file issue minimal reproducible example GitHub.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate inverse probability of censoring weights at time t. — calc_weights","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"Estimates inverse probability censoring weights fitting cox-propotinal hazards model landmark cohort individuals. Primarily used internally, function exported allow users reproduce results vignette estimating confidence intervals using bootstrapping manually.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"","code":"calc_weights(   data.mstate,   data.raw,   covs = NULL,   t,   s,   landmark.type = \"state\",   j = NULL,   max.weight = 10,   stabilised = FALSE,   max.follow = NULL )"},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"data.mstate Validation data msdata format data.raw Validation data data.frame (one row per individual) covs Character vector variable names adjust calculating inverse probability censoring weights t Follow time calculate weights s Landmark time predictions made landmark.type Whether weights estimated individuals uncensored time s ('') individuals uncensored state j time s ('state') j Landmark state predictions made (required landmark.type = 'state') max.weight Maximum bound weights stabilised Indicates whether weights stabilised max.follow Maximum follow model calculating inverse probability censoring weights. Reducing t + 1 may aid proportional hazards assumption met model.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"dataframe three columns. id corresponds patient ids data.raw. ipcw contains inverse probability censoring weights (specifically inverse probability uncesored). pcw = 1/ipcw. stabilised = TRUE specified, fourth variable ipcw.stab returned, stabilised inverse probability censoring weights.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"Estimates inverse probability censoring weights (Hernan M, Robins J, 2020). Fits cox proportional hazards model individuals landmark cohort, predicting probability censored time t. landmark cohort may either individuals uncensored time s, uncensored state j time s. predictors w.covs assumed linear effect hazard. Weights estimated individuals data.raw, even used analysis meet landmarking requirements. individual enters absorbing state prior t, estimate probability censored time entry absorbing state, rather t. Details provided vignette overview.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"Hernan M, Robins J (2020). “12.2 Estimating IP weights via modeling.” Causal Inference: , chapter 12.2. Chapman Hall/CRC, Boca Raton.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calc_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate inverse probability of censoring weights at time t. — calc_weights","text":"","code":"# Estimate inverse probability of censoring weights for individual in cohort ebmtcal. # Specifically the probability of being uncensored at t = 1826 days. # Weights are estimated using a model fitted in all individuals uncensored at time s = 0. weights.manual <- calc_weights(data.mstate = msebmtcal,   data.raw = ebmtcal,   covs = c(\"year\", \"agecl\", \"proph\", \"match\"),   t = 1826,   s = 0,   landmark.type = \"state\",   j = 1)   str(weights.manual) #> 'data.frame':\t2279 obs. of  2 variables: #>  $ id  : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ ipcw: num  NA 1.14 NA 1.01 1.03 ..."},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibration plots for a multistate model' — calib_msm","title":"Calibration plots for a multistate model' — calib_msm","text":"Calculates underlying data calibration plots predicted transition probabilities multistate model using three methods. BLR-IPCW: Binary logistic regression inverse probability censoring weights. MLR-IPCW: Multinomial logistic regression inverse probability censoring weights, based nominal calibration  framework van Hoorde et al. (2014, 2015) Pseudo-values: Pseudo-values estimated using Aalen-Johansen estimator (Aalen OO, Johansen S, 1978).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibration plots for a multistate model' — calib_msm","text":"","code":"calib_msm(   data.mstate,   data.raw,   j,   s,   t,   tp.pred,   tp.pred.plot = NULL,   calib.type = \"blr\",   curve.type = \"rcs\",   rcs.nk = 3,   loess.span = 0.75,   loess.degree = 2,   loess.surface = c(\"interpolate\", \"direct\"),   loess.statistics = c(\"approximate\", \"exact\", \"none\"),   loess.trace.hat = c(\"exact\", \"approximate\"),   loess.cell = 0.2,   loess.iterations = 4,   loess.iterTrace = FALSE,   mlr.smoother.type = \"sm.ps\",   mlr.ps.int = 4,   mlr.degree = 3,   mlr.s.df = 4,   mlr.niknots = 4,   weights = NULL,   w.function = NULL,   w.covs = NULL,   w.landmark.type = \"state\",   w.max = 10,   w.stabilised = FALSE,   w.max.follow = NULL,   pv.group.vars = NULL,   pv.n.pctls = NULL,   pv.precalc = NULL,   pv.ids = NULL,   CI = FALSE,   CI.type = \"bootstrap\",   CI.R.boot = NULL,   CI.seed = 1,   transitions.out = NULL,   assess.moderate = TRUE,   assess.mean = TRUE,   ... )"},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibration plots for a multistate model' — calib_msm","text":"data.mstate Validation data msdata format data.raw Validation data data.frame (one row per individual) j Landmark state predictions made s Landmark time predictions made t Follow time calibration assessed tp.pred Data frame matrix predicted transition probabilities time t, state j time s. must separate column predicted transition probabilities every state, even predicted transition probabilities 0. tp.pred.plot Data frame matrix predicted risks possible transition plot calibration curves. Argument provided enable user apply bootstrapping manually. calib.type Whether calibration plots estimated using BLR-IPCW ('blr'), MLR-IPCW ('mlr') pseudo-values ('pv') curve.type Whether calibration curves estimated using restricted cubic splines ('rcs') loess smoothers ('loess') rcs.nk Number knots curves estimated using restricted cubic splines loess.span Span curves estimated using loess smoothers loess.degree Degree curves estimated. using loess smoothers loess.surface see loess.control loess.statistics see loess.control loess.trace.hat see loess.control loess.cell see loess.control loess.iterations see loess.control loess.iterTrace see loess.control mlr.smoother.type Type smoothing applied. Takes values s (see s), sm.ps (see sm.ps) sm.os (see sm.os). mlr.ps.int number equally-spaced B spline intervals vector spline smoother (see sm.ps) mlr.degree degree B-spline basis vector spline smoother (see sm.ps) mlr.s.df degrees freedom vector spline (see s) mlr.niknots number interior knots (see sm.os) weights Vector inverse probability censoring weights w.function Custom function estimating inverse probability censoring weights w.covs Character vector variable names adjust calculating inverse probability censoring weights w.landmark.type Whether weights estimated individuals uncensored time s ('') individuals uncensored state j time s ('state') w.max Maximum bound inverse probability censoring weights w.stabilised Indicates whether inverse probability censoring weights stabilised w.max.follow Maximum follow model calculating inverse probability censoring weights. Reducing t + 1 may aid proportional hazards assumption met model. pv.group.vars Variables group calculating pseudo-values pv.n.pctls Number percentiles predicted risk group calculating pseudo-values pv.precalc Pre-calculated pseudo-values pv.ids Id's individuals calculate pseudo-values CI Size confidence intervals % CI.type Method estimating confidence interval (currently restricted bootstrap) CI.R.boot Number bootstrap replicates estimating confidence interval calibration curve CI.seed Seed bootstrapping procedure transitions.Transitions calculate calibration curves. possible transitions left NULL. assess.moderate TRUE/FALSE whether estimate data calibration plots assess.mean TRUE/FALSE whether estimate mean calibration ... Extra arguments passed w.function (custom function estimating weights)","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibration plots for a multistate model' — calib_msm","text":"calib_msm returns list containing two elements: plotdata metadata. plotdata element contains data calibration plots. list element containing calibration plot data transition probabilities possible states. list element contains patient ids (id) data.raw, predicted transition probabilities (pred) estimated observed event probabilities (obs). confidence interval requested, upper (obs.upper) lower (obs.lower) bounds observed event probabilities also returned. tp.pred.plot specified, column (id) returned. metadata element contains metadata including: vector possible transitions, vector transitions calibration curves estimated , size confidence interval, method estimating calibration curve user specified information.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calibration plots for a multistate model' — calib_msm","text":"Observed event probabilities time t estimated predicted transition probabilities tp.pred state j time s. calib.type = 'blr' estimates calibration curves using techniques assessing calibration binary logistic regression model (Van Calster et al., 2016). choice restricted cubic splines loess smoothers estimating calibration curve can made using curve.type. Landmarking (van Houwelingen HC, 2007) applied assess calibration individuals uncensored state j time s. Calibration can assessed individuals also uncensored time t, accounted using inverse probability censoring weights (Hernan M, Robins J, 2020). See method BLR-IPCW Pate et al XXXX full explanation approach. calib.type = 'mlr' estimates calibration scatter plots using technique assessing calibration multinomial logistic regression models, namely nominal calibration framework van Hoorde et al. (2014, 2015). Landmarking (van Houwelingen HC, 2007) applied assess calibration individuals uncensored state j time s. Calibration can assessed individuals also uncensored time t, accounted using inverse probability censoring weights (Hernan M, Robins J, 2020). See method BLR-IPCW Pate et al XXXX full explanation approach. calib.type = 'pv' estimates calibration curves using using pseudo-values (Andersen PK, Pohar Perme M, 2010) calculated using Aalen-Johansen estimator (Aalen OO, Johansen S, 1978). Calibration curves generated regressing pseudo-values predicted transition probabilities. choice restricted cubic splines loess smoothers estimating calibration curve can made using curve.type. Landmarking (van Houwelingen HC, 2007) applied assess calibration individuals uncensored state j time s. nature pseudo-values means calibration can assessed landmarked individuals, regardless censoring time. See method PV Pate et al XXXX full explanation approach. Two datasets cohort inidividuals must provided. Firstly, data.raw must data.frame one row per individual containing variables time censoring (dtcens), indicator censoring dtcens.s, (dtcens.s = 1) individual censored time dtcens, dtcens.s = 0 otherwise. individual enters absorbing state, prevents censoring happening (.e. dtcens.s = 0). data.raw must also contain desired variables estimating weights. Secondly, data.mstate must dataset class msdata, generated using [mstate] package. dataset used apply landmarking identify state individuals time t. data.mstate can derived data.raw, inefficient within calibmsm::calib_msm due bootstrapping procedure, therefore must inputted seperately. Unless user specifies weights using weights, weights estimated using cox-proportional hazard model, assuming linear functional form variables defined w.covs. urge users specify model estimating weights. weights argument must vector length equal number rows data.raw. Confidence intervals produced calibration scatter plots (calib.type = 'mlr'). calibration curves estimated using calib.type = 'blr', confidence intervals can estimated using bootstrapping (CI.type = 'bootstrap). procedure uses internal method estimating weights, therefore encourage users specify bootstrapping procedure, incorporates model estimating weights. Details provided vignette BLR-IPCW-manual-bootstrap. calibration curves estimated using calib.type = 'pv', confidence intervals can estimated using bootstrapping (CI.type = 'bootstrap) parametric formulae (CI.type = 'parametric). computational reasons recommend using parametric approach. calibration plots can plotted using plot.calib_msm plot.calib_mlr.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calibration plots for a multistate model' — calib_msm","text":"Aalen OO, Johansen S. Empirical Transition Matrix Non-Homogeneous Markov Chains Based Censored Observations. Scand J Stat. 1978;5(3):141-150. Andersen PK, Pohar Perme M. Pseudo-observations survival analysis. Stat Methods Med Res. 2010;19(1):71-99. doi:10.1177/0962280209105020 Hernan M, Robins J (2020). “12.2 Estimating IP weights via modeling.” Causal Inference: , chapter 12.2. Chapman Hall/CRC, Boca Raton. Van Calster B, Nieboer D, Vergouwe Y, De Cock B, Pencina MJ, Steyerberg EW (2016). “calibration hierarchy risk models defined: utopia empirical data.” Journal Clinical Epidemiology, 74, 167–176. ISSN 18785921. doi:10.1016/j.jclinepi.2015. 12.005. URL http://dx.doi.org/10.1016/j.jclinepi.2015.12.005 Van Hoorde K, Vergouwe Y, Timmerman D, Van Huffel S, Steyerberg W, Van Calster B (2014). “Assessing calibration multinomial risk prediction models.” Statistics Medicine, 33(15), 2585–2596. doi:10.1002/sim.6114. Van Hoorde K, Van Huffel S, Timmerman D, Bourne T, Van Calster B (2015). “spline-based tool assess visualize calibration multiclass risk predictions.” Journal Biomedical Informatics, 54, 283–293. ISSN 15320464. doi:10.1016/j.jbi.2014.12.016. URL http://dx.doi.org/10.1016/j.jbi.2014.12.016. van Houwelingen HC (2007). “Dynamic Prediction Landmarking Event History Analysis.” Scandinavian Journal Statistics, 34(1), 70–85. Yee TW (2015). Vector Generalized Linear Additive Models. 1 edition. Springer New, NY. ISBN 978-1-4939-4198-8. doi:10.1007/978-1-4939-2818-7. URL https://link.springer.com/book/10.1007/978-1-4939-2818-7.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/calib_msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibration plots for a multistate model' — calib_msm","text":"","code":"# Estimate BLR-IPCW calibration curves for the predicted transition # probabilities at time t = 1826, when predictions were made at time # s = 0 in state j = 1. These predicted transition probabilities are stored in tps0.  # Extract the predicted transition probabilities out of state j = 1 tp.pred <- dplyr::select(dplyr::filter(tps0, j == 1), any_of(paste(\"pstate\", 1:6, sep = \"\")))  # Now estimate the observed event probabilities for each possible transition. dat.calib <- calib_msm(data.mstate = msebmtcal,  data.raw = ebmtcal,  j=1,  s=0,  t = 1826,  tp.pred = tp.pred,  w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"))  # Summarise the output summary(dat.calib) #> The method used to assess calibration was BLR-IPCW #>  #> There were non-zero predicted transition probabilities into states  1,2,3,4,5,6 #>  #> Calibration curves have been estimated for transitions into states  1,2,3,4,5,6 #>  #> Calibration was assessed at time 1826 and calibration was assessed in a landmarked cohort of individuals in state j = 1 at time s = 0 #>  #> A confidence interval was not estimated #>  #> The estimated data are stored in list element `plotdata`: #>  #> $state1 #>   id      pred       obs #> 2  2 0.1140189 0.1095897 #> 4  4 0.1383878 0.1036308 #> 5  5 0.1233226 0.1051035 #>  #> $state2 #>   id      pred       obs #> 2  2 0.2316569 0.1698031 #> 4  4 0.1836189 0.1855591 #> 5  5 0.1609740 0.1759804 #>  #> $state3 #>   id       pred        obs #> 2  2 0.08442692 0.12485834 #> 4  4 0.07579429 0.11666056 #> 5  5 0.05508100 0.09189341 #>  #> $state4 #>   id      pred       obs #> 2  2 0.2328398 0.2427580 #> 4  4 0.2179331 0.2243106 #> 5  5 0.1828176 0.1851051 #>  #> $state5 #>   id      pred       obs #> 2  2 0.1481977 0.1909795 #> 4  4 0.1538475 0.1654523 #> 5  5 0.1425950 0.2215190 #>  #> $state6 #>   id      pred       obs #> 2  2 0.1888598 0.2069354 #> 4  4 0.2304185 0.2542212 #> 5  5 0.3352099 0.3163102 #>"},{"path":"https://alexpate30.github.io/calibmsm/reference/calibmsm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"calibmsm: Calibration Plots for the Transition Probabilities from Multistate Models — calibmsm-package","title":"calibmsm: Calibration Plots for the Transition Probabilities from Multistate Models — calibmsm-package","text":"Assess calibration existing (.e. previously developed) multistate model calibration plots. Calibration assessed using one three methods. 1) Calibration methods binary logistic regression models applied fixed time point conjunction inverse probability censoring weights. 2) Calibration methods multinomial logistic regression models applied fixed time point conjunction inverse probability censoring weights. 3) Pseudo-values estimated using Aalen-Johansen estimator observed risk. methods applied conjunction landmarking required. calibration plots evaluate calibration (validation cohort interest) transition probabilities estimated existing multistate model. package development focused multistate models, calibration plots can produced model utilises information post baseline update predictions (e.g. dynamic models); competing risks models; standard single outcome survival models, predictions can made landmark time. underpinning methodology currently undergoing peer review; see Pate et al. (2023) arXiv:2308.13394 Pate et al. (2023) https://alexpate30.github.io/calibmsm/articles/Overview.html.","code":""},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/calibmsm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibmsm: Calibration Plots for the Transition Probabilities from Multistate Models — calibmsm-package","text":"Maintainer: Alexander Pate alexander.pate@manchester.ac.uk (ORCID) [copyright holder] contributors: Glen P Martin glen.martin@manchester.ac.uk (ORCID) [funder, reviewer]","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.cmprsk.html","id":null,"dir":"Reference","previous_headings":"","what":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal.cmprsk","title":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal.cmprsk","text":"Used vignette/article: Comparison--graphical-calibration-curves--competing-risks-setting.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.cmprsk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal.cmprsk","text":"","code":"ebmtcal.cmprsk"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.cmprsk.html","id":"-ebmtcal-cmprsk-","dir":"Reference","previous_headings":"","what":"'ebmtcal.cmprsk'","title":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal.cmprsk","text":"data frame 2,279 rows 17 columns: id Patient indentifier rec, rec.s Time event indicator recovery variable ae, ae.s Time event indicator adverse event variable recae, recae.s Time event indicator recovery + adverse event variable rel, rel.s Time event indicator relapse variable srv, srv.s Time event indicator death variable year Year transplant agecl Age transplant proph Prophylaxis match Donor-recipient match dtcens Time censoring dtcens.s Event indicator, 1:censoring occured, 0: absorbing state entered censoring occured","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.cmprsk.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal.cmprsk","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.cmprsk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal.cmprsk","text":"data frame 2,279 individuals blood cancer undergone transplant. data identical ebmt4 data, except two extra variables derived, time censoring censoring indicator, required assess calibration using methods calibmsm. Specifically, time censoring ar calculated setting competing risks model first state, transitions can made. means entry state (absorbing states) effect preventing censoring occurring, dtcens dtcens.s different values found ebmtcal. dataset designed used alongside dataset msebmtcal.cmprsk, assessing calibration competing risks model. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.cmprsk.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal.cmprsk","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.html","id":null,"dir":"Reference","previous_headings":"","what":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal","title":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal","text":"data frame 2,279 individuals blood cancer undergone transplant. data identical ebmt4 data, except two extra variables derived, time censoring censoring indicator, required assess calibration using methods calibmsm. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal","text":"","code":"ebmtcal"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.html","id":"-ebmtcal-","dir":"Reference","previous_headings":"","what":"'ebmtcal'","title":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal","text":"data frame 2,279 rows 17 columns: id Patient indentifier rec, rec.s Time event indicator recovery variable ae, ae.s Time event indicator adverse event variable recae, recae.s Time event indicator recovery + adverse event variable rel, rel.s Time event indicator relapse variable srv, srv.s Time event indicator death variable year Year transplant agecl Age transplant proph Prophylaxis match Donor-recipient match dtcens Time censoring dtcens.s Event indicator, 1:censoring occured, 0: absorbing state entered censoring occured","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/ebmtcal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"European Group for Blood and Marrow Transplantation data (one row per individual) — ebmtcal","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":null,"dir":"Reference","previous_headings":"","what":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"Used vignette/article: Comparison--graphical-calibration-curves--competing-risks-setting.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"","code":"msebmtcal.cmprsk"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":"-msebmtcal-cmprsk-","dir":"Reference","previous_headings":"","what":"'msebmtcal.cmprsk'","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"data frame 9,116 rows 8 columns: id Patient indentifier transition state transition state trans transition number Tstart time entered state '' Tstop time leaving state '' time time state '' status event indicator, 1:transitioned state ''","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"ebmt4 data converted msdata format (see msprep), subsequent states considered absorbing states. .e. transitions initial state considered, meaning data constitutes competing risks model initial state. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.cmprsk.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"European Group for Blood and Marrow Transplantation data in competing risks format, for transitions out of the initial state only — msebmtcal.cmprsk","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.html","id":null,"dir":"Reference","previous_headings":"","what":"European Group for Blood and Marrow Transplantation data in msdata format. — msebmtcal","title":"European Group for Blood and Marrow Transplantation data in msdata format. — msebmtcal","text":"ebmt4 data converted msdata format (see msprep), using processes implemented mstate package. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"European Group for Blood and Marrow Transplantation data in msdata format. — msebmtcal","text":"","code":"msebmtcal"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.html","id":"-msebmtcal-","dir":"Reference","previous_headings":"","what":"'msebmtcal'","title":"European Group for Blood and Marrow Transplantation data in msdata format. — msebmtcal","text":"data frame msdata format (see msprep) 15,512 rows 8 columns: id Patient indentifier transition state transition state trans transition number Tstart time entered state '' Tstop time leaving state '' time time state '' status event indicator, 1:transitioned state ''","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"European Group for Blood and Marrow Transplantation data in msdata format. — msebmtcal","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/msebmtcal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"European Group for Blood and Marrow Transplantation data in msdata format. — msebmtcal","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_mlr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots calibration scatter plots for objects of class calib_mlr estimated using using calib_msm. — plot.calib_mlr","title":"Plots calibration scatter plots for objects of class calib_mlr estimated using using calib_msm. — plot.calib_mlr","text":"Plots calibration scatter plots transition probabilities multistate model estimated using MLR-IPCW approach.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_mlr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots calibration scatter plots for objects of class calib_mlr estimated using using calib_msm. — plot.calib_mlr","text":"","code":"# S3 method for calib_mlr plot(   x,   ...,   combine = TRUE,   ncol = NULL,   nrow = NULL,   size.point = 0.5,   size.text = 12,   transparency.plot = 0.25,   marg.density = FALSE,   marg.density.size = 5,   marg.density.type = \"density\",   marg.rug = FALSE,   marg.rug.transparency = 0.1,   titles.include = TRUE,   titles = NULL,   axis.titles.x = NULL,   axis.titles.text.x = \"Predicted risk\",   axis.titles.y = NULL,   axis.titles.text.y = \"Observed risk\" )"},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_mlr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots calibration scatter plots for objects of class calib_mlr estimated using using calib_msm. — plot.calib_mlr","text":"x Object class calib_mlr generated calib_msm ... combine Whether combine one plot using ggarrange, return list individual plots ncol Number columns combined calibration plot nrow Number rows combined calibration plot size.point Size points scatter plot size.text Size text plot transparency.plot Degree transparency points calibration scatter plot marg.density Whether produce marginal density plots TRUE/FALSE marg.density.size Size main plot relative density plots (see ggMarginal) marg.density.type type marginal plot show (see ggMarginal) marg.rug Whether produce marginal rug plots TRUE/FALSE marg.rug.transparency Degree transparency density rug plot along axis titles.include Whether include titles individual calibration plots titles Vector titles calibration plots. Defaults \"State k\" plot. axis.titles.x Position plots include title x-axis axis.titles.text.x x-axis title axis.titles.y Position plots include title y-axis axis.titles.text.y y-axis title","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_mlr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots calibration scatter plots for objects of class calib_mlr estimated using using calib_msm. — plot.calib_mlr","text":"combine = TRUE, returns object classes gg, ggplot, ggarrange, ggplots combined one object. combine = FALSE, returns object class list, element containing object class gg ggplot.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_mlr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots calibration scatter plots for objects of class calib_mlr estimated using using calib_msm. — plot.calib_mlr","text":"","code":"# Using competing risks data out of initial state (see vignette: ... -in-competing-risk-setting). # Estimate and plot MLR-IPCW calibration scatter plots for the predicted transition # probabilities at time t = 1826, when predictions were made at time # s = 0 in state j = 1. These predicted transition probabilities are stored in tp.cmprsk.j0.  # To minimise example time we reduce the datasets to 150 individuals. # Extract the predicted transition probabilities out of state j = 1 for first 150 individuals tp.pred <- tp.cmprsk.j0 |>  dplyr::filter(id %in% 1:150) |>  dplyr::select(any_of(paste(\"pstate\", 1:6, sep = \"\"))) # Reduce ebmtcal to first 150 individuals ebmtcal <- ebmtcal |> dplyr::filter(id %in% 1:150) # Reduce msebmtcal.cmprsk to first 150 individuals msebmtcal.cmprsk <- msebmtcal.cmprsk |> dplyr::filter(id %in% 1:150)  # Now estimate the observed event probabilities for each possible transition. dat.calib <- calib_msm(data.mstate = msebmtcal.cmprsk,  data.raw = ebmtcal,  j=1,  s=0,  t = 1826,  tp.pred = tp.pred,  calib.type = \"mlr\",  w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"),  mlr.ps.int = 2,  mlr.degree = 2)   # These are then plotted  plot(dat.calib, combine = TRUE, nrow = 2, ncol = 3)"},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots calibration curves estimated using calib_msm. — plot.calib_msm","title":"Plots calibration curves estimated using calib_msm. — plot.calib_msm","text":"Plots calibration curves transition probabilities multistate model estimated using BLR-IPCW pseudo-value approaches.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots calibration curves estimated using calib_msm. — plot.calib_msm","text":"","code":"# S3 method for calib_msm plot(   x,   ...,   combine = TRUE,   ncol = NULL,   nrow = NULL,   size.line = 0.5,   size.text = 12,   marg.density = FALSE,   marg.density.size = 5,   marg.density.type = \"density\",   marg.rug = FALSE,   marg.rug.transparency = 0.1,   titles.include = TRUE,   titles = NULL,   axis.titles.x = NULL,   axis.titles.text.x = \"Predicted risk\",   axis.titles.y = NULL,   axis.titles.text.y = \"Observed risk\",   legend.include = TRUE,   legend.seperate = FALSE,   legend.title = NULL,   legend.position = \"bottom\" )"},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots calibration curves estimated using calib_msm. — plot.calib_msm","text":"x Object class 'calib_msm' generated calib_msm. ... combine Whether combine one plot using ggarrange, return list individual plots ncol Number columns combined calibration plot nrow Number rows combined calibration plot size.line Size line plots size.text Size text plot marg.density Whether produce marginal density plots TRUE/FALSE marg.density.size Size main plot relative density plots (see ggMarginal) marg.density.type type marginal plot show (see ggMarginal) marg.rug Whether produce marginal rug plots TRUE/FALSE marg.rug.transparency Degree transparency density rug plot along axis titles.include Whether include titles individual calibration plots titles Vector titles calibration plots. Defaults \"State k\" plot. axis.titles.x Position plots include title x-axis axis.titles.text.x x-axis title axis.titles.y Position plots include title y-axis axis.titles.text.y y-axis title legend.include Whether produce legend legend.seperate = Whether include legend plot (FALSE) seperate object (TRUE) legend.title Title legend legend.position Position legend","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots calibration curves estimated using calib_msm. — plot.calib_msm","text":"combine = TRUE, returns object classes gg, ggplot, ggarrange, ggplots combined one object. combine = FALSE, returns object class list, element containing object class gg ggplot.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/plot.calib_msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots calibration curves estimated using calib_msm. — plot.calib_msm","text":"","code":"# Estimate and plot BLR-IPCW calibration curves for the predicted transition # probabilities at time t = 1826, when predictions were made at time # s = 0 in state j = 1. These predicted transition probabilities are stored in tps0.  # Extract the predicted transition probabilities out of state j = 1 tp.pred <- dplyr::select(dplyr::filter(tps0, j == 1), any_of(paste(\"pstate\", 1:6, sep = \"\")))  # Now estimate the observed event probabilities for each possible transition. dat.calib <- calib_msm(data.mstate = msebmtcal,  data.raw = ebmtcal,  j=1,  s=0,  t = 1826,  tp.pred = tp.pred,  w.covs = c(\"year\", \"agecl\", \"proph\", \"match\"))   # These are then plotted  plot(dat.calib, combine = TRUE, nrow = 2, ncol = 3)"},{"path":"https://alexpate30.github.io/calibmsm/reference/tp.cmprsk.j0.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","title":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","text":"Used vignette/article: Comparison--graphical-calibration-curves--competing-risks-setting.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tp.cmprsk.j0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","text":"","code":"tp.cmprsk.j0"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/tp.cmprsk.j0.html","id":"-tp-cmprsk-j-","dir":"Reference","previous_headings":"","what":"'tp.cmprsk.j0'","title":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","text":"data frame 2,279 rows 13 columns: id Patient indentifier pstate1, pstate2, pstate3, pstate4, pstate5, pstate6 Predicted transition probabilities transitions states 1 6 se1, se2, se3, se4, se5, se6 Standard error predicted transition probabilities transitions states 1 6","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tp.cmprsk.j0.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tp.cmprsk.j0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","text":"Data frame containing predicted transition probabilities state j = 1 made time s = 0, competing risks model initial state (see msebmtcal.cmprsk). predicted transition probabilities estimated fitting competing risks model msebmtcal.cmprsk data using leave-one-approach. Code deriving dataset provided source code calibmsm. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tp.cmprsk.j0.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predicted risks for a competing risks model out of state j = 0 — tp.cmprsk.j0","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps0.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","title":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","text":"Data frame containing predicted transition probabilities state j = 1 made time s = 0. predicted transition probabilities estimated fitting multistate model ebmt4 data using leave-one-approach. Code deriving dataset provided source code calibmsm. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","text":"","code":"tps0"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/tps0.html","id":"-tps-","dir":"Reference","previous_headings":"","what":"'tps0'","title":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","text":"data frame 13,674 (CHANGE) rows 14 columns: id Patient indentifier pstate1, pstate2, pstate3, pstate4, pstate5, pstate6 Predicted transition probabilities transitions states 1 6 se1, se2, se3, se4, se5, se6 Standard error predicted transition probabilities transitions states 1 6 j State predicted transition probabilities estimated ","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps0.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps0.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predicted transition probabilities out of transplant state made at time s = 0 — tps0","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps100.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicted transition probabilities out of every state made at time s = 100 — tps100","title":"Predicted transition probabilities out of every state made at time s = 100 — tps100","text":"Data frame containing predicted transition probabilities states 1 (transplant), 2 (adverse event), 3 (recovery) 4 (adverse event + recovery), made time s = 100. predicted transition probabilities estimated fitting multistate model ebmt4 data using leave-one-approach. Code deriving dataset provided source code calibmsm. Code derivation dataset provided source code package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicted transition probabilities out of every state made at time s = 100 — tps100","text":"","code":"tps100"},{"path":[]},{"path":"https://alexpate30.github.io/calibmsm/reference/tps100.html","id":"-tps-","dir":"Reference","previous_headings":"","what":"'tps100'","title":"Predicted transition probabilities out of every state made at time s = 100 — tps100","text":"data frame 13,674 (CHANGE) rows 14 columns: id Patient indentifier pstate1, pstate2, pstate3, pstate4, pstate5, pstate6 Predicted transition probabilities transitions states 1 6 se1, se2, se3, se4, se5, se6 Standard error predicted transition probabilities transitions states 1 6 j State predicted transition probabilities estimated ","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps100.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicted transition probabilities out of every state made at time s = 100 — tps100","text":"dataset derived data made available within mstate package, see ebmt4. data originally provided European Group Blood Marrow Transplantation (https://www.ebmt.org/). reiterate source statement given developers mstate: \"acknowledge European Society Blood Marrow Transplantation (EBMT) making available data. Disclaimer: data simplified purpose illustration analysis competing risks multi-state models reflect real life situation. clinical conclusions drawn data.\"","code":""},{"path":"https://alexpate30.github.io/calibmsm/reference/tps100.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predicted transition probabilities out of every state made at time s = 100 — tps100","text":"EBMT (2023). “Data European Society Blood Marrow Transplantation.” URL https://search.r-project.org/CRAN/refmans/mstate/html/EBMT-data.html. de Wreede LC, Fiocco M, Putter H (2011). “mstate: R Package Analysis Competing Risks Multi-State Models.” Journal Statistical Software, 38(7).","code":""},{"path":"https://alexpate30.github.io/calibmsm/news/index.html","id":"calibmsm-110","dir":"Changelog","previous_headings":"","what":"calibmsm 1.1.0","title":"calibmsm 1.1.0","text":"Change package structure based comments Journal Statistical Software editors. calib_blr changed calib_blr_ipcw, calib_mlr changed calib_mlr_ipcw, calib_blr_ipcw, calib_mlr_ipcw calib_pv changed internal functions. Introduced one master function calibmsm assess calibration using BLR-IPCW, MLR-IPCW pseudo-values methodology. minor changes code internal functions introduction new internal functions processes occur number times within package (example application landmarking).","code":""},{"path":"https://alexpate30.github.io/calibmsm/news/index.html","id":"calibmsm-100","dir":"Changelog","previous_headings":"","what":"calibmsm 1.0.0","title":"calibmsm 1.0.0","text":"CRAN release: 2023-11-30 Submission first version package CRAN Journal Statistical Software.","code":""},{"path":"https://alexpate30.github.io/calibmsm/news/index.html","id":"calibmsm-0009000","dir":"Changelog","previous_headings":"","what":"calibmsm 0.0.0.9000","title":"calibmsm 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""},{"path":"https://alexpate30.github.io/calibmsm/news/index.html","id":"calibmsm-1000000","dir":"Changelog","previous_headings":"","what":"calibmsm 1.0.0.0000","title":"calibmsm 1.0.0.0000","text":"Submission first version package CRAN. Please see Overview vignette detailed explanation package.","code":""}]
